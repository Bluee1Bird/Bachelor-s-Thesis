@article{al-zarouniRealityRisksConsented2006,
  title = {The {{Reality}} of {{Risks}} from {{Consented}} Use of {{USB Devices}}},
  author = {{Al-Zarouni}, Marwan},
  year = {2006},
  month = dec,
  journal = {Australian Information Security Management Conference},
  doi = {10.4225/75/57b6543434762},
  keywords = {read1,snippet},
  file = {C\:\\Users\\maaik\\OneDrive\\Dokumente\\Uni\\Semester 6\\BA\\literature\\The Reality of Risks from Consented use of USB Devices.pdf;C\:\\Users\\maaik\\Zotero\\storage\\7KAHXGII\\70.html}
}

@inproceedings{ali-gombeDroidScraperToolAndroid2019,
  title = {\{\vphantom\}{{DroidScraper}}\vphantom\{\}: {{A Tool}} for {{Android}} \{\vphantom\}{{In-Memory}}\vphantom\{\} {{Object Recovery}} and {{Reconstruction}}},
  shorttitle = {\{\vphantom\}{{DroidScraper}}\vphantom\{\}},
  booktitle = {22nd {{International Symposium}} on {{Research}} in {{Attacks}}, {{Intrusions}} and {{Defenses}} ({{RAID}} 2019)},
  author = {{Ali-Gombe}, Aisha and Sudhakaran, Sneha and Case, Andrew and Iii, Golden G. Richard},
  year = {2019},
  pages = {547--559},
  urldate = {2024-03-05},
  isbn = {978-1-939133-07-6},
  langid = {english},
  file = {C:\Users\maaik\Zotero\storage\2Y9GR7J4\Ali-Gombe et al. - 2019 - DroidScraper A Tool for Android In-Memory Obj.pdf}
}

@misc{aliceAl1ce23NSAPlayset2024,
  title = {Al1ce23/{{NSA-Playset}}},
  author = {{alice}},
  year = {2024},
  month = mar,
  urldate = {2024-03-15},
  abstract = {Mirror of the NSA Playset Project},
  keywords = {gsm,hardware,leak,leaked,mirror,nsa,nsa-leak,reconnaissance,surveillance}
}

@article{alsultanKeystrokeDynamicsAuthentication2013,
  title = {Keystroke {{Dynamics Authentication}}: {{A Survey}} of {{Free-text Methods}}},
  author = {Alsultan, Arwa and Warwick, Kevin},
  year = {2013},
  volume = {10},
  number = {4},
  abstract = {Current computer systems depend greatly on authentication methods in order to provide sufficient protection to the data handled by these systems. Rather than using the common username and password scheme which suffers from many security and usability limitations, we investigate in this paper the use of keystroke dynamics as a more useable authentication alternative. We focus on the research done on free-text keystroke systems and its ability to provide continual identity verification during the whole time that the user is using the system.},
  langid = {english},
  keywords = {read1},
  file = {C:\Users\maaik\Zotero\storage\IB22R92L\Alsultan and Warwick - 2013 - Keystroke Dynamics Authentication A Survey of Fre.pdf}
}

@inproceedings{angelDefendingMaliciousPeripherals2016,
  title = {Defending against {{Malicious Peripherals}} with {{Cinch}}},
  booktitle = {25th {{USENIX Security Symposium}} ({{USENIX Security}} 16)},
  author = {Angel, Sebastian and Wahby, Riad S. and Howald, Max and Leners, Joshua B. and Spilo, Michael and Sun, Zhen and Blumberg, Andrew J. and Walfish, Michael},
  year = {2016},
  pages = {397--414},
  urldate = {2024-03-06},
  isbn = {978-1-931971-32-4},
  langid = {english},
  keywords = {read1,snippet},
  file = {C:\Users\maaik\Zotero\storage\46R3Y83S\Angel et al. - 2016 - Defending against Malicious Peripherals with Cinch.pdf}
}

@article{appelbaumCatalogRevealsNSA2013,
  title = {Catalog {{Reveals NSA Has Back Doors}} for {{Numerous Devices}}},
  author = {Appelbaum, Jacob and Horchert, Judith and St{\"o}cker, Christian},
  year = {2013},
  month = dec,
  journal = {Der Spiegel},
  issn = {2195-1349},
  urldate = {2024-04-17},
  abstract = {After years of speculation that electronics can be accessed by intelligence agencies through a back door, an internal NSA catalog reveals that such methods already exist for numerous end-user devices.},
  chapter = {International},
  langid = {english},
  keywords = {International,National Security Agency,NSA Spying Scandal,United States,World},
  file = {C:\Users\maaik\Zotero\storage\ZJT8CMYF\catalog-reveals-nsa-has-back-doors-for-numerous-devices-a-940994.html}
}

@misc{ArduinoArduino2024,
  title = {Arduino/{{Arduino}}},
  year = {2024},
  month = apr,
  urldate = {2024-04-25},
  abstract = {Arduino IDE 1.x},
  howpublished = {Arduino},
  keywords = {arduino,ide}
}

@misc{ArduinoHardware,
  title = {Arduino {{Hardware}}},
  urldate = {2024-04-25},
  abstract = {Open-source electronic prototyping platform enabling users to create interactive electronic objects.},
  howpublished = {https://www.arduino.cc/en/hardware},
  langid = {english},
  file = {C:\Users\maaik\Zotero\storage\3SG8BNNR\hardware.html}
}

@misc{ArduinoProMini,
  title = {Arduino {{Pro Mini}} {\textbar} {{Arduino Documentation}}},
  urldate = {2024-04-25},
  howpublished = {https://docs.arduino.cc/retired/boards/arduino-pro-mini/},
  file = {C:\Users\maaik\Zotero\storage\4WWH63GL\arduino-pro-mini.html}
}

@article{bangSecureUSBBypassing2010,
  title = {Secure {{USB}} Bypassing Tool},
  author = {Bang, Jewan and Yoo, Byeongyeong and Lee, Sangjin},
  year = {2010},
  month = aug,
  journal = {Digital Investigation},
  series = {The {{Proceedings}} of the {{Tenth Annual DFRWS Conference}}},
  volume = {7},
  pages = {S114-S120},
  issn = {1742-2876},
  doi = {10.1016/j.diin.2010.05.014},
  urldate = {2024-03-14},
  abstract = {As storage capacity increases due to development of flash memory techniques, use of USB memory has increased. As use of USB memory increases, violations of privacy and company confidentiality and technical information leakage occur more often. In this context, use of USB memories that provide security functions to protect the data in them is increasing. Most USB memories are equipped with basic security functions offered by the USB flash drive controller (hereafter called the ``USB controller''). However, USB-controller-based security functions have several vulnerabilities. This paper explains how security functions can be bypassed using USB controller commands and presents the design and implementation of a secure USB bypassing tool that bypass the USB security functions.},
  keywords = {Authentication bypass tools,Computer Forensics,Digital evidence collection,read1,snippet,USB flash drive},
  file = {C\:\\Users\\maaik\\OneDrive\\Dokumente\\Uni\\Semester 6\\BA\\literature\\secure USB bypassing tool, bang et al 2010.pdf;C\:\\Users\\maaik\\Zotero\\storage\\J4FZYK63\\S1742287610000411.html}
}

@inproceedings{barbhuiyaAnomalyBasedApproach2012,
  title = {An {{Anomaly Based Approach}} for {{HID Attack Detection Using Keystroke Dynamics}}},
  booktitle = {Cyberspace {{Safety}} and {{Security}}},
  author = {Barbhuiya, Ferdous A. and Saikia, Tonmoy and Nandi, Sukumar},
  editor = {Xiang, Yang and Lopez, Javier and Kuo, C.-C. Jay and Zhou, Wanlei},
  year = {2012},
  series = {Lecture {{Notes}} in {{Computer Science}}},
  pages = {139--152},
  publisher = {Springer},
  address = {Berlin, Heidelberg},
  doi = {10.1007/978-3-642-35362-8_12},
  abstract = {Recently, a new class of USB based attacks has emerged which unlike previous USB based threats does not exploit any vulnerability or depend on any operating system feature. The USB HID attack vector utilizes an emulated keyboard and onboard flash memory storage to simulate keystrokes on a victim machine. In this paper we propose an anomaly based approach to detect such an attack using a biometric called keystroke dynamics.},
  isbn = {978-3-642-35362-8},
  langid = {english},
  keywords = {Anomaly Detection,Biometrics,Keystroke Dynamics,read1,snippet,USB HID Attack},
  file = {C:\Users\maaik\OneDrive\Dokumente\Uni\Semester 6\BA\literature\anomaly.pdf}
}

@inproceedings{benadjilaWooKeyDesigningTrusted2019,
  title = {{{WooKey}}: Designing a Trusted and Efficient {{USB}} Device},
  shorttitle = {{{WooKey}}},
  booktitle = {Proceedings of the 35th {{Annual Computer Security Applications Conference}}},
  author = {Benadjila, Ryad and Michelizza, Arnauld and Renard, Mathieu and Thierry, Philippe and Trebuchet, Philippe},
  year = {2019},
  month = dec,
  series = {{{ACSAC}} '19},
  pages = {673--686},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  doi = {10.1145/3359789.3359802},
  urldate = {2024-03-06},
  abstract = {The work presented in this paper takes place in the design initiatives that have emerged to thwart BadUSB threats [59]. Though many attempts were focusing on the host side, by enhancing the operating system's USB sub-module robustness [78, 80] or by adding a proxy between the host and the device [6, 53], we have chosen to focus our efforts on the device side. More specifically, our work presents the WooKey platform, a custom highly secure USB thumb drive with mass storage capabilities, designed for user data encryption and protection, and embedding a full-fledged set of in-depth defenses. The device encloses a firmware with a secure DFU (Device Firmware Update) implementation using up-to-date cryptography as well as an external and extractable authentication token based on a secure element. The runtime software security is built upon EwoK, an innovative open source microkernel designed for microcontrollers with advanced security and performance in mind. Finally, another strength of the project is its core guiding principle: provide an open source and open hardware platform [3] using off-the-shelf components.},
  isbn = {978-1-4503-7628-0},
  keywords = {Ada,DFU,Javacard,MCU,microkernel,MPU,read1,snippet,SPARK,STM32,USB},
  file = {C:\Users\maaik\Zotero\storage\HLHQNT2P\Benadjila et al. - 2019 - WooKey designing a trusted and efficient USB devi.pdf}
}

@inproceedings{bickfordRootkitsSmartPhones2010,
  title = {Rootkits on Smart Phones: Attacks, Implications and Opportunities},
  shorttitle = {Rootkits on Smart Phones},
  booktitle = {Proceedings of the {{Eleventh Workshop}} on {{Mobile Computing Systems}} \& {{Applications}}},
  author = {Bickford, Jeffrey and O'Hare, Ryan and Baliga, Arati and Ganapathy, Vinod and Iftode, Liviu},
  year = {2010},
  month = feb,
  series = {{{HotMobile}} '10},
  pages = {49--54},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  doi = {10.1145/1734583.1734596},
  urldate = {2024-03-13},
  abstract = {Smart phones are increasingly being equipped with operating systems that compare in complexity with those on desktop computers. This trend makes smart phone operating systems vulnerable to many of the same threats as desktop operating systems. In this paper, we focus on the threat posed by smart phone rootkits. Rootkits are malware that stealthily modify operating system code and data to achieve malicious goals, and have long been a problem for desktops. We use three example rootkits to show that smart phones are just as vulnerable to rootkits as desktop operating systems. However, the ubiquity of smart phones and the unique interfaces that they expose, such as voice, GPS and battery, make the social consequences of rootkits particularly devastating. We conclude the paper by identifying the challenges that need to be addressed to effectively detect rootkits on smart phones.},
  isbn = {978-1-4503-0005-6},
  keywords = {read1,rootkits,smart phones},
  file = {C:\Users\maaik\Zotero\storage\XQA3A6NV\Bickford et al. - 2010 - Rootkits on smart phones attacks, implications an.pdf}
}

@article{bojovicRisingThreatHardware2019,
  title = {The Rising Threat of Hardware Attacks: {{USB}} Keyboard Attack Case Study},
  shorttitle = {The Rising Threat of Hardware Attacks},
  author = {Bojovi{\'c}, Petar D. and Basicevic, Ilija and {Milos Pilipovic} and {Zivko Bojovic} and Bojovic, Milena},
  year = {2019},
  publisher = {[object Object]},
  doi = {10.13140/RG.2.2.27801.47205},
  urldate = {2024-03-26},
  abstract = {This paper is aimed to raise awareness regarding hardware-based attacks on PC peripherals. The focus is on the issue of communication intercept for USB keyboards. We have developed hardware and proved that is possible to perform effective attacks, gain access to sensitive information and achieve control of the computer system.},
  langid = {english},
  keywords = {read1,snippet},
  file = {C:\Users\maaik\Zotero\storage\TB66A4V5\Bojović et al. - 2019 - The rising threat of hardware attacks USB keyboar.pdf}
}

@article{burszteinDOESDROPPINGUSB,
  title = {{{DOES DROPPING USB DRIVES REALLY WORK}}?},
  author = {Bursztein, Elie},
  langid = {english},
  keywords = {read1},
  file = {C:\Users\maaik\Zotero\storage\Q4GTZANS\Bursztein - DOES DROPPING USB DRIVES REALLY WORK.pdf}
}

@inproceedings{caiPracticalityMotionBased2012,
  title = {On the {{Practicality}} of {{Motion Based Keystroke Inference Attack}}},
  booktitle = {Trust and {{Trustworthy Computing}}},
  author = {Cai, Liang and Chen, Hao},
  editor = {Katzenbeisser, Stefan and Weippl, Edgar and Camp, L. Jean and Volkamer, Melanie and Reiter, Mike and Zhang, Xinwen},
  year = {2012},
  pages = {273--290},
  publisher = {Springer},
  address = {Berlin, Heidelberg},
  doi = {10.1007/978-3-642-30921-2_16},
  abstract = {Recent researches have shown that motion sensors may be used as a side channel to infer keystrokes on the touchscreen of smartphones. However, the practicality of this attack is unclear. For example, does this attack work on different devices, screen dimensions, keyboard layouts, or keyboard types? Does this attack depend on specific users or is it user independent? To answer these questions, we conducted a user study where 21 participants typed a total of 47,814 keystrokes on four different mobile devices in six settings. Our results show that this attack remains effective even though the accuracy is affected by user habits, device dimension, screen orientation, and keyboard layout. On a number-only keyboard, after the attacker tries 81 4-digit PINs, the probability that she has guessed the correct PIN is 65\%, which improves the accuracy rate of random guessing by 81 times. Our study also indicates that inference based on the gyroscope is more accurate than that based on the accelerometer. We evaluated two classification techniques in our prototype and found that they are similarly effective.},
  isbn = {978-3-642-30921-2},
  langid = {english},
  keywords = {Gesture Recognition,Mobile Device,Motion Data,read1,snippet,Support Vector Machine,User Study},
  file = {C:\Users\maaik\OneDrive\Dokumente\Uni\Semester 6\BA\literature\On the Practicality of Motion Based Keystroke.pdf}
}

@article{caseMemoryAnalysisMacOS2020,
  title = {Memory {{Analysis}} of {{macOS Page Queues}}},
  author = {Case, Andrew and Maggio, Ryan D. and Manna, Modhuparna and Richard, Golden G.},
  year = {2020},
  month = jul,
  journal = {Forensic Science International: Digital Investigation},
  volume = {33},
  pages = {301004},
  issn = {2666-2817},
  doi = {10.1016/j.fsidi.2020.301004},
  urldate = {2024-03-05},
  abstract = {Memory forensics is the examination of volatile memory (RAM) for artifacts related to a digital investigation. Memory forensics has become mainstream in recent years because it allows recovery of a wide variety of artifacts that are never written to the file system and are therefore not available when performing traditional filesystem forensics. To analyze memory samples, an investigator can use one of several available memory analysis frameworks, which are responsible for parsing and presenting the raw data in a meaningful way. A core task of these frameworks is the discovery and reordering of non-contiguous physical pages in a memory sample into the ordered virtual address spaces used by the operating system and running processes to organize their code and data. Commonly referred to as address translation, this task requires a thorough understanding of the memory management mechanisms of the hardware architecture and operating system version of the device from which the memory sample was acquired. Given its critical role in memory analysis, there has been significant interest in studying the operating system mechanisms responsible for allocating and managing physical pages so that they can be accurately modeled by memory analysis frameworks. The more thoroughly the page handling mechanisms are modeled in memory forensics tools, the more pages can be scrutinized during memory analysis. This leads to more artifacts being reconstructed and made available to an investigator. In this paper, we present the results of our analysis of the macOS page queues subsystem. macOS tracks pages in a number of different states using a set of queues and as we will illustrate, the reconstruction of data from these queues allows a significant number of memory pages to be analyzed that are currently ignored by memory forensics tools. Through incorporation of these artifacts into analysis, memory analysis frameworks can present an even richer set of artifacts and data to investigators than ever before.},
  keywords = {Digital forensics,Incident response,Memory forensics,Operating systems}
}

@article{caseMemoryForensicsPath2017,
  title = {Memory Forensics: {{The}} Path Forward},
  shorttitle = {Memory Forensics},
  author = {Case, Andrew and Richard, Golden G.},
  year = {2017},
  month = mar,
  journal = {Digital Investigation},
  series = {Special {{Issue}} on {{Volatile Memory Analysis}}},
  volume = {20},
  pages = {23--33},
  issn = {1742-2876},
  doi = {10.1016/j.diin.2016.12.004},
  urldate = {2024-03-05},
  abstract = {Traditionally, digital forensics focused on artifacts located on the storage devices of computer systems, mobile phones, digital cameras, and other electronic devices. In the past decade, however, researchers have created a number of powerful memory forensics tools that expand the scope of digital forensics to include the examination of volatile memory as well. While memory forensic techniques have evolved from simple string searches to deep, structured analysis of application and kernel data structures for a number of platforms and operating systems, much research remains to be done. This paper surveys the state-of-the-art in memory forensics, provide critical analysis of current-generation techniques, describe important changes in operating systems design that impact memory forensics, and sketches important areas for further research.},
  keywords = {Computer forensics,Incident response,Malware,Memory analysis,Memory forensics}
}

@article{caseyInceptionVirtualSpace2019,
  title = {Inception: {{Virtual Space}} in {{Memory Space}} in {{Real Space}} -- {{Memory Forensics}} of {{Immersive Virtual Reality}} with the {{HTC Vive}}},
  shorttitle = {Inception},
  author = {Casey, Peter and {Lindsay-Decusati}, Rebecca and Baggili, Ibrahim and Breitinger, Frank},
  year = {2019},
  month = jul,
  journal = {Digital Investigation},
  volume = {29},
  pages = {S13-S21},
  issn = {1742-2876},
  doi = {10.1016/j.diin.2019.04.007},
  urldate = {2024-03-05},
  abstract = {Virtual Reality (VR) has become a reality. With the technology's increased use cases, comes its misuse. Malware affecting the Virtual Environment (VE) may prevent an investigator from ascertaining virtual information from a physical scene, or from traditional ``dead'' analysis. Following the trend of anti-forensics, evidence of an attack may only be found in memory, along with many other volatile data points. Our work provides the primary account for the memory forensics of Immersive VR systems, and in specific the HTC Vive. Our approach is capable of reconstituting artifacts from memory that are relevant to the VE, and is also capable of reconstructing a visualization of the room setup a VR player was immersed into. In specific, we demonstrate that the VE, location, state and class of VR devices can be extracted from memory. Our work resulted in the first open source VR memory forensics plugin for the Volatility Framework. We discuss our findings, and our replicable approach that may be used in future memory forensics research.},
  keywords = {Data recovery,Memory forensics,Reverse engineering,Virtual reality},
  file = {C:\Users\maaik\Zotero\storage\849D253I\Casey et al. - 2019 - Inception Virtual Space in Memory Space in Real S.pdf}
}

@article{chenReversingExploitingApple,
  title = {Reversing and {{Exploiting}} an {{Apple}}{\textregistered} {{Firmware Update}}},
  author = {Chen, K},
  abstract = {The security posture of a computer can be adversely affected by poorly-designed devices on its USB bus. Many modern embedded devices permit firmware to be upgraded in the field and the use of low-cost microcontrollers in these devices can make it difficult to perform the mathematical operations needed to verify a cryptographic signature. The security of many of these upgrade mechanisms is very much in question. For a concrete example, we describe how to tamper with a firmware upgrade to the Apple Aluminum Keyboard. We describe how an attacker can subvert an off-the-shelf keyboard by embedding into the firmware malicious code which allows a rootkit to survive a clean re-installation of the host operating system.},
  langid = {english},
  keywords = {read1},
  file = {C:\Users\maaik\Zotero\storage\7TMMBMK4\Chen - Reversing and Exploiting an Apple® Firmware Update.pdf}
}

@inproceedings{clarkHardwareTrojanHorse2009,
  title = {Hardware {{Trojan Horse Device Based}} on {{Unintended USB Channels}}},
  booktitle = {2009 {{Third International Conference}} on {{Network}} and {{System Security}}},
  author = {Clark, John and Leblanc, Sylvain and Knight, Scott},
  year = {2009},
  month = oct,
  pages = {1--8},
  doi = {10.1109/NSS.2009.48},
  urldate = {2024-03-19},
  abstract = {This paper discusses research activities that investigated the risk associated with USB devices. The research focused on identifying, characterizing and modelling unintended USB channels in contemporary computer systems. Such unintended channels can be used by a USB hardware Trojan horse device to create two way communications with a targeted network endpoint, thus violating the integrity and confidentiality of the data residing on the endpoint. The work was validated through the design and implementation of a proof of concept hardware Trojan horse device that uses two such unintended USB channels to successfully interact with a target network endpoint to compromise and exfiltrate data from it.},
  keywords = {Communication system security,Computer networks,Computer security,Hardware,Hardware Trojan Horse Device,Humans,Invasive software,Keyboards,Military computing,Protocols,read1,snippet,Unintended USB Channel,Universal Serial Bus},
  file = {C\:\\Users\\maaik\\Zotero\\storage\\6STJGYDJ\\Clark et al. - 2009 - Hardware Trojan Horse Device Based on Unintended U.pdf;C\:\\Users\\maaik\\Zotero\\storage\\7LADU47X\\5319005.html}
}

@inproceedings{clarkRisksAssociatedUSB2011,
  title = {Risks Associated with {{USB Hardware Trojan}} Devices Used by Insiders},
  booktitle = {2011 {{IEEE International Systems Conference}}},
  author = {Clark, John and Leblanc, Sylvain and Knight, Scott},
  year = {2011},
  month = apr,
  pages = {201--208},
  doi = {10.1109/SYSCON.2011.5929130},
  urldate = {2024-03-15},
  abstract = {This paper extends the discussion of potential damage that can be done by Hardware Trojan Horse devices by discussing the specific risks associated with an Insider's use of such a device to circumvent established security policies, even when these are implemented with state of the art Endpoint Security Solutions. The paper argues that a specific category of Hardware Trojan Horse devices, those implemented as functional peripheral devices, are particularly dangerous when used by a malicious Insider. The research discusses the implementation of a proof of concept Hardware Trojan Horse device, implemented as a USB Human Interface Devices, that exploits unintended USB channels to exfiltrate data from a computer. The work discusses unintended USB channels, paying particular attention to the observability of the channel in operation. Various scenarios are presented to show that Hardware Trojan Horse devices implemented as peripheral devices can be used to prosecute a wide variety of attacks that are not mitigated by modern defensive techniques. The work demonstrates that a Hardware Trojan Horse device and physical access by a malicious Insider are sufficient to compromise a modern computer system. The paper argues that the study of Hardware Trojan devices must become an integral part of research on Insider Threats.},
  keywords = {Bandwidth,Hardware,Keyboards,Light emitting diodes,Observability,read1,snippet,Trojan horses,Universal Serial Bus},
  file = {C\:\\Users\\maaik\\Zotero\\storage\\2FXNTHVR\\Clark et al. - 2011 - Risks associated with USB Hardware Trojan devices .pdf;C\:\\Users\\maaik\\Zotero\\storage\\XF8IU6LE\\5929130.html}
}

@article{cuthbertBluetoothKeyboardAttack2011,
  title = {A {{Bluetooth Keyboard Attack}}},
  author = {Cuthbert, Torrey and Gontarek, Andrew and Jensen, Elizabeth and Robbins, Peter},
  year = {2011},
  abstract = {Bluetooth devices have become increasingly popular and are expected to surpass two billion devices sold by 2010.},
  langid = {english},
  keywords = {read1},
  file = {C:\Users\maaik\Zotero\storage\SR27U9X2\Cuthbert et al. - A Bluetooth Keyboard Attack.pdf}
}

@inproceedings{denneyUSBWatchDynamicHardwareAssisted2019,
  title = {{{USB-Watch}}: {{A Dynamic Hardware-Assisted USB Threat Detection Framework}}},
  shorttitle = {{{USB-Watch}}},
  booktitle = {Security and {{Privacy}} in {{Communication Networks}}},
  author = {Denney, Kyle and Erdin, Enes and Babun, Leonardo and Vai, Michael and Uluagac, Selcuk},
  editor = {Chen, Songqing and Choo, Kim-Kwang Raymond and Fu, Xinwen and Lou, Wenjing and Mohaisen, Aziz},
  year = {2019},
  pages = {126--146},
  publisher = {Springer International Publishing},
  address = {Cham},
  doi = {10.1007/978-3-030-37228-6_7},
  abstract = {The USB protocol is among the most widely adopted protocols today thanks to its plug-and-play capabilities and the vast number of devices which support the protocol. However, this same adaptability leaves unwitting computing devices prone to attacks. Malicious USB devices can disguise themselves as benign devices (e.g., keyboard, mouse, etc.) to insert malicious commands on end devices. These malicious USB devices can mimic an actual device or a human typing pattern and appear as a real device to the operating system. Typically, advanced software-based detection schemes are used to identify the malicious nature of such devices. However, a powerful adversary (e.g., as rootkits or advanced persistent threats) can still subvert those software-based detection schemes. To address these concerns, in this work, we introduce a novel hardware-assisted, dynamic USB-threat detection framework called USB-Watch. Specifically, USB-Watch utilizes hardware placed between a USB device and the host machine to hook into the USB communication, collect USB data, and provides the capability to view unaltered USB protocol communications. This unfettered data is then fed into a machine learning-based classifier which dynamically determines the true nature of the USB device. Using real malicious USB devices (i.e., Rubber-Ducky) mimicking as a keyboard, we perform a thorough analysis of typing dynamic features (e.g., typing time differentials, key press durations, etc.) to effectively classify malicious USB devices from normal human typing behaviors. In this work, we show that USB-Watch provides a lightweight, OS-independent framework which effectively distinguishes differences between normal and malicious USB behaviors with a ROC curve of 0.89. To the best of our knowledge, this is the first hardware-based detection mechanism to dynamically detect threats coming from USB devices.},
  isbn = {978-3-030-37228-6},
  langid = {english},
  keywords = {read1,snippet},
  file = {C:\Users\maaik\OneDrive\Dokumente\Uni\Semester 6\BA\literature\USB-Watch p126.pdf}
}

@article{dolan-gavittForensicAnalysisWindows2008,
  title = {Forensic Analysis of the {{Windows}} Registry in Memory},
  author = {{Dolan-Gavitt}, Brendan},
  year = {2008},
  month = sep,
  journal = {Digital Investigation},
  series = {The {{Proceedings}} of the {{Eighth Annual DFRWS Conference}}},
  volume = {5},
  pages = {S26-S32},
  issn = {1742-2876},
  doi = {10.1016/j.diin.2008.05.003},
  urldate = {2024-03-05},
  abstract = {This paper describes the structure of the Windows registry as it is stored in physical memory. We present tools and techniques that can be used to extract this data directly from memory dumps. We also provide guidelines to aid investigators and experimentally demonstrate the value of our techniques. Finally, we describe a compelling attack that modifies the cached version of the registry without altering the on-disk version. While this attack would be undetectable with conventional on-disk registry analysis techniques, we demonstrate that such malicious modifications are easily detectable by examining memory.},
  keywords = {Cached data,Digital forensics,Microsoft Windows,Registry,Volatile memory},
  file = {C:\Users\maaik\Zotero\storage\E8RXJJ6M\S1742287608000297.html}
}

@misc{dominicspillShmooCon2014Open2014,
  title = {{{ShmooCon}} 2014 - {{An Open}} and {{Affordable USB Man}} in the {{Middle Device}}},
  author = {{Dominic Spill}},
  year = {2014},
  month = jan,
  urldate = {2024-04-18},
  abstract = {An Open and Affordable USB Man in the Middle Device Dominic Spill With the introduction of FaceDancer, there has been a surge of interest in USB security. USBProxy is an open framework for the BeagleBone Black to make it simpler for anyone to monitor, inject or modify data carried over a USB connection. While the FaceDancer will allow devices to be written on a host system, we are able to go further and man-in-the-middle connections to existing devices as well. The BeagleBone Black also enables us to operate at USB 2.0 Hi-Speed. Dominic Spill has been building Bluetooth packet sniffers since 2007; he now works on Ubertooth and Daisho among other communications sniffing projects.}
}

@misc{DuckyScriptSyntaxGuide,
  title = {{{DuckyScript}}™ {{Syntax Guide}}},
  journal = {GitHub},
  urldate = {2024-05-05},
  abstract = {Contribute to O-MG/O.MG-Firmware development by creating an account on GitHub.},
  howpublished = {https://github.com/O-MG/O.MG-Firmware/wiki/DuckyScript\%E2\%84\%A2---Syntax-Guide},
  langid = {english},
  file = {C:\Users\maaik\Zotero\storage\DLSR7QWI\O.html}
}

@inproceedings{efendyExploringPossibilityUSB2019,
  title = {Exploring the {{Possibility}} of {{USB}} Based {{Fork Bomb Attack}} on {{Windows Environment}}},
  booktitle = {2019 {{International Conference}} on {{ICT}} for {{Smart Society}} ({{ICISS}})},
  author = {Efendy, Rezky Aulia and Almaarif, Ahmad and Budiono, Avon and Saputra, Muhardi and Puspitasari, Warih and Sutoyo, Edi},
  year = {2019},
  month = nov,
  volume = {7},
  pages = {1--4},
  issn = {2640-0545},
  doi = {10.1109/ICISS48059.2019.8969789},
  urldate = {2024-03-14},
  abstract = {The need for data exchange and storage is currently increasing. The increased need for data exchange and storage also increases the need for data exchange devices and media. One of the most commonly used media exchanges and data storage is the USB Flash Drive. USB Flash Drive are widely used because they are easy to carry and have a fairly large storage. Unfortunately, this increased need is not directly proportional to an increase in awareness of device security, both for USB flash drive devices and computer devices that are used as primary storage devices. This research shows the threats that can arise from the use of USB Flash Drive devices. The threat that is used in this research is the fork bomb implemented on an Arduino Pro Micro device that is converted to a USB Flash drive. The purpose of the Fork Bomb is to damage the memory performance of the affected devices. As a result, memory performance to execute the process will slow down. The use of a USB Flash drive as an attack vector with the fork bomb method causes users to not be able to access the operating system that was attacked. The results obtained indicate that the USB Flash Drive can be used as a medium of Fork Bomb attack on the Windows operating system.},
  keywords = {attack vector,fork bomb,read1,snippet,USB attack,windows},
  file = {C\:\\Users\\maaik\\Zotero\\storage\\JKMM228A\\Efendy et al. - 2019 - Exploring the Possibility of USB based Fork Bomb A.pdf;C\:\\Users\\maaik\\Zotero\\storage\\JTJWY9HR\\8969789.html}
}

@misc{elkinsHackingHardwareIntroducing,
  title = {Hacking with {{Hardware}}: {{Introducing}} the {{Universal RF USB Keyboard Emulation Device}} - {{URFUKED}} ({{DEF CON}} 18) - {{InfoconDB}}},
  shorttitle = {Hacking with {{Hardware}}},
  author = {Elkins, Monta},
  urldate = {2024-03-28},
  abstract = {"If do right, no can defence" -Miyagi  Do you check every USB plug on your computer before you log-in? Didn't think so... URFUKED is used to take over the user's keyboard input and quickly execute preprogrammed attacks with the user's privileges.  Plug in the USB receiver into the victim's computer. Then attack immediately or if necessary wait for the user to login- then trigger the attack remotely with an RF transmitter.  Walk by and talk to the victim, and while he's turned away from the display, press the button on the transmitter to trigger the attack- it'll be done by the time he turns back around. Or trigger it from across the room. It happens too fast to stop even if the user is watching when it happens.  Learn how to build the device cheaply; program it using the opensource Arduino development environment.Learn how to use it and modify it for specific attacks.},
  howpublished = {https://infocondb.org/con/def-con/def-con-18/hacking-with-hardware-introducing-the-universal-rf-usb-keyboard-emulation-device-urfuked},
  langid = {english},
  keywords = {read1,snippet},
  file = {C\:\\Users\\maaik\\OneDrive\\Dokumente\\Uni\\Semester 6\\BA\\literature\\DEFCON-18-Elkins-Universal-RF-Keyboard.pdf;C\:\\Users\\maaik\\Zotero\\storage\\VPVZ3R6C\\hacking-with-hardware-introducing-the-universal-rf-usb-keyboard-emulation-device-urfuked.html}
}

@article{enckTaintDroidInformationFlowTracking2014,
  title = {{{TaintDroid}}: {{An Information-Flow Tracking System}} for {{Realtime Privacy Monitoring}} on {{Smartphones}}},
  shorttitle = {{{TaintDroid}}},
  author = {Enck, William and Gilbert, Peter and Han, Seungyeop and Tendulkar, Vasant and Chun, Byung-Gon and Cox, Landon P. and Jung, Jaeyeon and McDaniel, Patrick and Sheth, Anmol N.},
  year = {2014},
  month = jun,
  journal = {ACM Transactions on Computer Systems},
  volume = {32},
  number = {2},
  pages = {5:1--5:29},
  issn = {0734-2071},
  doi = {10.1145/2619091},
  urldate = {2024-03-13},
  abstract = {Today's smartphone operating systems frequently fail to provide users with visibility into how third-party applications collect and share their private data. We address these shortcomings with TaintDroid, an efficient, system-wide dynamic taint tracking and analysis system capable of simultaneously tracking multiple sources of sensitive data. TaintDroid enables realtime analysis by leveraging Android's virtualized execution environment. TaintDroid incurs only 32\% performance overhead on a CPU-bound microbenchmark and imposes negligible overhead on interactive third-party applications. Using TaintDroid to monitor the behavior of 30 popular third-party Android applications, in our 2010 study we found 20 applications potentially misused users' private information; so did a similar fraction of the tested applications in our 2012 study. Monitoring the flow of privacy-sensitive data with TaintDroid provides valuable input for smartphone users and security service firms seeking to identify misbehaving applications.},
  keywords = {Information-flow tracking,mobile apps,privacy monitoring,read1,smartphones},
  file = {C:\Users\maaik\Zotero\storage\5ZTAHNM9\Enck et al. - 2014 - TaintDroid An Information-Flow Tracking System fo.pdf}
}

@inproceedings{erdinOSIndependentHardwareAssisted2018,
  title = {{{OS Independent}} and {{Hardware-Assisted Insider Threat Detection}} and {{Prevention Framework}}},
  booktitle = {{{MILCOM}} 2018 - 2018 {{IEEE Military Communications Conference}} ({{MILCOM}})},
  author = {Erdin, Enes and Aksu, Hidayet and Uluagac, Selcuk and Vai, Micheal and Akkaya, Kemal},
  year = {2018},
  month = oct,
  pages = {926--932},
  issn = {2155-7586},
  doi = {10.1109/MILCOM.2018.8599719},
  urldate = {2024-03-22},
  abstract = {Governmental and military institutions harbor critical infrastructure and highly confidential information. Although institutions are investing a lot for protecting their data and assets from possible outsider attacks, insiders are still a distrustful source for information leakage. As malicious software injection is one among many attacks, turning innocent employees into malicious attackers through social attacks is the most impactful one. Malicious insiders or uneducated employees are dangerous for organizations that they are already behind the perimeter protections that guard the digital assets; actually, they are trojans on their own. For an insider, the easiest possible way for creating a hole in security is using the popular and ubiquitous Universal Serial Bus (USB) devices due to its versatile and easy to use plug-and-play nature. USB type storage devices are the biggest threats for contaminating mission critical infrastructure with viruses, malware, and trojans. USB human interface devices are also dangerous as they may connect to a host with destructive hidden functionalities. In this paper, we propose a novel hardware-assisted insider threat detection and prevention framework for the USB case. Our novel framework is also OS independent. We implemented a proof-of-concept design on an FPGA board which is widely used in military settings supporting critical missions, and demonstrated the results considering different experiments. Based on the results of these experiments, we show that our framework can identify rapid-keyboard key-stroke attacks and can easily detect the functionality of the USB device plugged in. We present the resource consumption of our framework on the FPGA for its utilization on a host controller device. We show that the our hard-to-tamper framework introduces no overhead in USB communication in terms of user experience.},
  keywords = {Computer security,Hardware,Operating systems,Organizations,read1,snippet,Universal Serial Bus},
  file = {C\:\\Users\\maaik\\Zotero\\storage\\FZ3Q7RLZ\\Erdin et al. - 2018 - OS Independent and Hardware-Assisted Insider Threa.pdf;C\:\\Users\\maaik\\Zotero\\storage\\BSCG2D6V\\8599719.html}
}

@article{farhiMalboardNovelUser2019,
  title = {Malboard: {{A}} Novel User Keystroke Impersonation Attack and Trusted Detection Framework Based on Side-Channel Analysis},
  shorttitle = {Malboard},
  author = {Farhi, Nitzan and Nissim, Nir and Elovici, Yuval},
  year = {2019},
  month = aug,
  journal = {Computers \& Security},
  volume = {85},
  pages = {240--269},
  issn = {0167-4048},
  doi = {10.1016/j.cose.2019.05.008},
  urldate = {2024-03-15},
  abstract = {Concealing malicious components within widely used USB peripherals has become a popular attack vector utilizing social engineering techniques and exploiting users' trust in USB devices. This vector enables the attacker to easily penetrate an organization's computers even when the target is secured or in an air-gapped network. Such malicious concealment can be done as part of a supply chain attack or during the device manufacturing process. In cases where the device allows the user to update its firmware, a supply chain attack may involve changing just the device's firmware, thus compromising the device without the need for concealment. A compromised device can impersonate other devices like keyboards in order to send malicious keystrokes to the computer. However, the keystrokes generated maliciously do not match human keystroke characteristics, and therefore they can be easily detected by security tools that are designed to continuously verify the user's identity based on his/her keystroke dynamics. In this paper, we present Malboard, a sophisticated attack based on designated hardware concealment, which automatically generates keystrokes that have the attacked user's behavioral characteristics; in this attack these keystrokes are injected into the computer in the form of malicious commands and thus can evade existing detection mechanisms designed to continuously verify the user's identity based on keystroke dynamics. We implemented this novel attack and evaluated its performance on 30 subjects performing three different keystroke tasks; we evaluated the attack against three existing detection mechanisms, and the results show that our attack managed to evade detection in 83--100\% of the cases, depending on the detection tools in place. Malboard was proven to be effective in two scenarios: either by a remote attacker using wireless communication to communicate with Malboard or by an inside attacker (malicious employee) that physically operates and uses Malboard. In addition, in order to address the evasion gap, we developed three different modules aimed at detecting keystroke injection attacks in general, and particularly, the more sophisticated Malboard attack. Our proposed detection modules are trusted and secured, because they are based on three side-channel resources which originate from the interaction between the keyboard, user, and attacked host. These side-channel resources include (1) the keyboard's power consumption, (2) the keystrokes' sound, and (3) the user's behavior associated with his/her ability to respond to displayed textual typographical errors. Our results showed that each of the proposed detection modules is capable of detecting the Malboard attack in 100\% of the cases, with no misses and no false positives; using them together as an ensemble detection framework will assure that an organization is immune to the Malboard attack in particular and other keystroke injection attacks in general.},
  keywords = {Authentication,Concealment,Keyboard,Keystroke dynamics,Malicious,Malware,read1,snippet,Supply chain attack,USB,very useful},
  file = {C\:\\Users\\maaik\\OneDrive\\Dokumente\\Uni\\Semester 6\\BA\\literature\\fahri et al 2019.pdf;C\:\\Users\\maaik\\Zotero\\storage\\BQ2ICEIH\\S0167404818309957.html}
}

@misc{FreewareUtilitiesPassword,
  title = {Freeware Utilities: Password Recovery, System Utilities, Desktop Utilities - {{For Windows}}},
  shorttitle = {Freeware Utilities},
  journal = {NirSoft},
  urldate = {2024-03-14},
  abstract = {Unique collection of freeware desktop utilities, system utilities, password recovery tools, and more},
  howpublished = {https://www.nirsoft.net/},
  keywords = {read1},
  file = {C:\Users\maaik\Zotero\storage\XSXB3KXF\www.nirsoft.net.html}
}

@inproceedings{fuCurtainKeepYour2017,
  title = {Curtain: {{Keep Your Hosts Away}} from {{USB Attacks}}},
  shorttitle = {Curtain},
  booktitle = {Information {{Security}}},
  author = {Fu, Jianming and Huang, Jianwei and Zhang, Lanxin},
  editor = {Nguyen, Phong Q. and Zhou, Jianying},
  year = {2017},
  series = {Lecture {{Notes}} in {{Computer Science}}},
  pages = {455--471},
  publisher = {Springer International Publishing},
  address = {Cham},
  doi = {10.1007/978-3-319-69659-1_25},
  abstract = {In recent years, many attacks targeting USB were proposed. Besides spreading virus through USB storage, attackers are tending to attack USB stacks because in most cases, any information from devices will be trusted. In this paper, we design a system named Curtain on Windows to defend those attacks by analyzing their IRP flows. Curtain is deployed as a filter driver in USB stack on Windows. It'll sniff all the IRP flows of each USB device and analyze them. It's based on the fact that an attack always happens in a short time and that will be reflected in IRP flows. In short, Curtain provides a solution to defend USB attacks on Windows by inserting a filter driver to USB stacks and catch the behaviors of each device.},
  isbn = {978-3-319-69659-1},
  langid = {english},
  keywords = {Device security,read1,snippet,USB,Windows driver},
  file = {C:\Users\maaik\OneDrive\Dokumente\Uni\Semester 6\BA\literature\curtain.pdf}
}

@misc{gallagherPlayingNSAHardware2015,
  title = {Playing {{NSA}}, Hardware Hackers Build {{USB}} Cable That Can Attack},
  author = {Gallagher, Sean},
  year = {2015},
  month = jan,
  journal = {Ars Technica},
  urldate = {2024-03-15},
  abstract = {With built-in USB hub and radio, cable can spy or launch man-in-middle attacks.},
  howpublished = {https://arstechnica.com/information-technology/2015/01/playing-nsa-hardware-hackers-build-usb-cable-that-can-attack/},
  langid = {american},
  keywords = {read1,snippet},
  file = {C:\Users\maaik\Zotero\storage\MRWS7B7L\playing-nsa-hardware-hackers-build-usb-cable-that-can-attack.html}
}

@article{grajedaExperienceConstructingArtifact2018,
  title = {Experience Constructing the {{Artifact Genome Project}} ({{AGP}}): {{Managing}} the Domain's Knowledge One Artifact at a Time},
  shorttitle = {Experience Constructing the {{Artifact Genome Project}} ({{AGP}})},
  author = {Grajeda, Cinthya and Sanchez, Laura and Baggili, Ibrahim and Clark, Devon and Breitinger, Frank},
  year = {2018},
  month = jul,
  journal = {Digital Investigation},
  volume = {26},
  pages = {S47-S58},
  issn = {1742-2876},
  doi = {10.1016/j.diin.2018.04.021},
  urldate = {2024-03-06},
  abstract = {While various tools have been created to assist the digital forensics community with acquiring, processing, and organizing evidence and indicating the existence of artifacts, very few attempts have been made to establish a centralized system for archiving artifacts. The Artifact Genome Project (AGP) has aimed to create the largest vetted and freely available digital forensics repository for Curated Forensic Artifacts (CuFAs). This paper details the experience of building, implementing, and maintaining such a system by sharing design decisions, lessons learned, and future work. We also discuss the impact of AGP in both the professional and academic realms of digital forensics. Our work shows promise in the digital forensics academic community to champion the effort in curating digital forensic artifacts by integrating AGP into courses, research endeavors, and collaborative projects.},
  keywords = {Applications,Artifacts,Education,Forensics,read1},
  file = {C:\Users\maaik\Zotero\storage\3TZLJLH3\Grajeda et al. - 2018 - Experience constructing the Artifact Genome Projec.pdf}
}

@inproceedings{groblerMulticomponentViewDigital2010,
  title = {A {{Multi-component View}} of {{Digital Forensics}}},
  booktitle = {2010 {{International Conference}} on {{Availability}}, {{Reliability}} and {{Security}}},
  author = {Grobler, C.P. and Louwrens, C.P. and {von Solms}, S.H.},
  year = {2010},
  month = feb,
  pages = {647--652},
  doi = {10.1109/ARES.2010.61},
  urldate = {2024-03-26},
  abstract = {We are living in a world where there is an increasing need for evidence in organizations. Good digital evidence is becoming a business enabler. Very few organizations have the structures (management and infrastructure) in place to enable them to conduct cost effective, low-impact and efficient digital investigations [1]. Digital Forensics (DF) is a vehicle that organizations use to provide good and trustworthy evidence and processes. The current DF models concentrate on reactive investigations, with limited reference to DF readiness and live investigations. However, organizations use DF for other purposes for example compliance testing. The paper proposes that DF consists of three components: Pro-active (ProDF), Active (ActDF) and Re-active (ReDF). ProDF concentrates on DF readiness and the proactive responsible use of DF to demonstrate good governance and enhance governance structures. ActDF considers the gathering of live evidence during an ongoing attack with a limited live investigation element whilst ReDF deals with the traditional DF investigation. The paper discusses each component and the relationship between the components.},
  keywords = {Active Digital Forensics,Africa,Availability,Business continuity,Costs,Digital Forensic readiness,Digital forensics,Digital Forensics,Information security,Information technology,Proactive Digital Forensics,Reactive Digital Forensics,read1,Technical drawing,Testing,Vehicles},
  file = {C\:\\Users\\maaik\\Zotero\\storage\\WGLTXXDY\\Grobler et al. - 2010 - A Multi-component View of Digital Forensics.pdf;C\:\\Users\\maaik\\Zotero\\storage\\L4CAGW55\\5438021.html}
}

@misc{hak5,
  title = {About},
  author = {Hak5},
  journal = {Hak5},
  urldate = {2024-04-25},
  abstract = {about},
  howpublished = {https://shop.hak5.org/pages/about},
  langid = {english},
  file = {C:\Users\maaik\Zotero\storage\7D6WJQCD\about.html}
}

@misc{hak5MaliciousCableDetector2020,
  title = {Malicious {{Cable Detector}} by {{O}}.{{MG}}},
  author = {Hak5},
  year = {2020},
  journal = {Hak5},
  urldate = {2024-04-18},
  abstract = {The Malicious Cable Detector detects all known malicious USB cables. Additionally, the Detector functions as a data blocker for safe charging. It is easy to use: plug just the cable into the Detector, then plug the Detector into your computer's USB port. LED activity indicates signs of life!~We have~analyzed a wide~ran},
  howpublished = {https://shop.hak5.org/products/malicious-cable-detector-by-o-mg},
  langid = {english},
  file = {C:\Users\maaik\Zotero\storage\DX8XW5FK\malicious-cable-detector-by-o-mg.html}
}

@misc{hak5MGCable,
  title = {O.{{MG Cable}}},
  author = {Hak5},
  journal = {Hak5},
  urldate = {2024-04-18},
  abstract = {The O.MG Cable is a hand made USB cable with an advanced implant hidden inside. It is designed to allow your Red Team to emulate attack scenarios of sophisticated adversaries. Until now, a cable like this would cost \$20,000 (ex: COTTONMOUTH-I). These cables will allow you to test new detection opportunities for your de},
  howpublished = {https://shop.hak5.org/products/omg-cable},
  langid = {english}
}

@misc{hak5MGUnBlocker,
  title = {O.{{MG UnBlocker}}},
  author = {Hak5},
  journal = {Hak5},
  urldate = {2024-04-18},
  abstract = {O.MG UnBlocker, the malicious USB data blockerUSB Data Blockers: the commonly prescribed cure for USB security. The O.MG UnBlocker looks and functions like a data blocker, but inside is a wireless O.MG implant laying dormant. Payloads transmit from the male side to help you get... unblocked.~Choose from 3 colors. Custo},
  howpublished = {https://shop.hak5.org/products/omg-unblocker},
  langid = {english},
  file = {C:\Users\maaik\Zotero\storage\534F8MPC\omg-unblocker.html}
}

@misc{hak5MischiefGadgets,
  title = {Mischief {{Gadgets}}},
  author = {Hak5},
  journal = {Hak5},
  urldate = {2024-04-25},
  howpublished = {https://shop.hak5.org/collections/mischief-gadgets},
  langid = {english},
  file = {C:\Users\maaik\Zotero\storage\IHUR7XLK\mischief-gadgets.html}
}

@misc{Hak5Usbrubberduckypayloads2024,
  title = {Hak5/Usbrubberducky-Payloads},
  year = {2024},
  month = may,
  urldate = {2024-05-14},
  abstract = {The Official USB Rubber Ducky Payload Repository},
  howpublished = {Hak5},
  keywords = {badusb,ducky-payloads,duckyscript,hacking-tools,hak5,hak5-rubber-ducky,hid,hotplug,keystroke-injection,payloads,pentesting,security-tools,usb-rubber-ducky,usbrubberducky}
}

@article{hanIRONHIDCreateYour2016,
  title = {{{IRON-HID}}: {{Create Your Own Bad USB}}},
  author = {Han, Seunghun and Park, Jun-Hyeok and Shin, Wook and Kim, HyoungChun and Ryou, Jae-Cheol and Kang, Junghwan and Park, Eungki},
  year = {2016},
  abstract = {With the development of semiconductor processes and the emergence of open-source hardware, there has been a rise in low-cost, high-performance embedded hardware of wide variety. Consequently, the maker culture, in which users create the tools that they require and share them with others, is spreading. In addition, security researchers are creating custom security inspection tools by using these embedded hardware. We have analyzed some of the existing custom security inspection tools, and developed IRON-HID, a tool with superior and more accurate functions than the existing tools. IRON-HID is designed to be attached to the existing hardware, and is composed of a custom device, firmware that operates the hardware, a test agent program that are installed on the host, and a commander program that are installed on user's smartphones. IRON-HID offers keyboard input transmission and monitoring, test agent installation, command execution, screen capturing, and file transmission functions so that it can be used in various penetration tests. The security inspector can control functions of IRON-HID using a smartphone, and can utilize penetration tests in various environments. Further, the security inspector gains the ability to inspect security weak points in a smartphone, a Point of Sale (POS) system, and a PC by attaching IRON-HID with a keyboard, a portable charger, or a card reader.},
  langid = {english},
  keywords = {read1,snippet},
  file = {C:\Users\maaik\Zotero\storage\58RT6ARI\Han et al. - IRON-HID Create Your Own Bad USB.pdf}
}

@inproceedings{hernandezFirmUSBVettingUSB2017,
  title = {{{FirmUSB}}: {{Vetting USB Device Firmware}} Using {{Domain Informed Symbolic Execution}}},
  shorttitle = {{{FirmUSB}}},
  booktitle = {Proceedings of the 2017 {{ACM SIGSAC Conference}} on {{Computer}} and {{Communications Security}}},
  author = {Hernandez, Grant and Fowze, Farhaan and Tian, Dave (Jing) and Yavuz, Tuba and Butler, Kevin R.B.},
  year = {2017},
  month = oct,
  series = {{{CCS}} '17},
  pages = {2245--2262},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  doi = {10.1145/3133956.3134050},
  urldate = {2024-03-06},
  abstract = {The USB protocol has become ubiquitous, supporting devices from high-powered computing devices to small embedded devices and control systems. USB's greatest feature, its openness and expandability, is also its weakness, and attacks such as BadUSB exploit the unconstrained functionality afforded to these devices as a vector for compromise. Fundamentally, it is virtually impossible to know whether a USB device is benign or malicious. This work introduces FirmUSB, a USB-specific firmware analysis framework that uses domain knowledge of the USB protocol to examine firmware images and determine the activity that they can produce. Embedded USB devices use microcontrollers that have not been well studied by the binary analysis community, and our work demonstrates how lifters into popular intermediate representations for analysis can be built, as well as the challenges of doing so. We develop targeting algorithms and use domain knowledge to speed up these processes by a factor of 7 compared to unconstrained fully symbolic execution. We also successfully find malicious activity in embedded 8051 firmwares without the use of source code. Finally, we provide insights into the challenges of symbolic analysis on embedded architectures and provide guidance on improving tools to better handle this important class of devices.},
  isbn = {978-1-4503-4946-8},
  keywords = {badusb,firmware analysis,read1,snippet,symbolic execution,usb},
  file = {C:\Users\maaik\Zotero\storage\6RG2BRK7\Hernandez et al. - 2017 - FirmUSB Vetting USB Device Firmware using Domain .pdf}
}

@article{hirofuchiUSBIPPeripheral2005,
  title = {{{USB}}/{{IP}} - a {{Peripheral Bus Extension}} for {{Device Sharing}} over {{IP Network}}},
  author = {Hirofuchi, Takahiro and Kawai, Eiji and Fujikawa, Kazutoshi and Sunahara, Hideki},
  year = {2005},
  abstract = {As personal computing becomes more popular and affordable, the availability of peripheral devices is also increasing rapidly. However, these peripheral devices can usually only be connected to a single machine at time. The ability to share peripheral devices between computers without any modification of existing computing environments is, consequently, a highly desirable goal, as it improves the efficiency and usability of such devices. Existing device sharing technologies in the pervasive computing area are not sufficient for peripheral devices designed for personal computers, because these technologies do not provide the degree of networktransparency necessary for both applications and device drivers.},
  langid = {english},
  keywords = {read1},
  file = {C:\Users\maaik\Zotero\storage\XVG6E8RH\Hirofuchi et al. - 2005 - USBIP - a Peripheral Bus Extension for Device Sha.pdf}
}

@misc{HomeUSBGuard,
  title = {Home {\textbar} {{USBGuard}}},
  urldate = {2024-04-28},
  howpublished = {https://usbguard.github.io/},
  keywords = {snippet},
  file = {C:\Users\maaik\Zotero\storage\KBR78Q4X\usbguard.github.io.html}
}

@misc{HomeVolatilityFoundation,
  title = {Home of {{The Volatility Foundation}} {\textbar} {{Open Source Volatility Memory Forensics Framework}}},
  journal = {The Volatility Foundation - Promoting Accessible Memory Analysis Tools Within the Memory Forensics Community},
  urldate = {2024-03-05},
  abstract = {Home of The Volatility Foundation - promoting open source, accessible memory analysis tools within the Memory Forensics community.},
  howpublished = {https://volatilityfoundation.org/},
  langid = {american}
}

@phdthesis{ibrahimRFDNAFingerprintingDetection2019,
  type = {M.{{S}}.},
  title = {{{RF-DNA Fingerprinting}} for the {{Detection}} of {{Malicious USB Devices}}},
  author = {Ibrahim, Omar Adel},
  year = {2019},
  journal = {PQDT - Global},
  address = {Qatar},
  urldate = {2024-03-22},
  abstract = {USB devices are considered to be a leading threat vector and a source for malicious attacks because they are used as a tool for updating and maintaining system configurations. The purpose of this research study is to evaluate the application of the Radio Frequency-Distinct Native Attributes (RF-DNA) fingerprinting technique on USB devices to discriminate between regular and malicious USB flash drives. We conducted an experiment by using the Unintentional Radiated Emissions (URE) produced by the normal function of the USB electronic components. We collected unintentional magnetic emissions from five USB devices under test used to develop Radio Frequency Distinct Native Attribute (RF-DNA) fingerprints that are used to classify and discriminate between different USB devices. We further used the Random Forest statistical learning algorithm for device classification and achieved 100{\textbackslash}\% classification accuracy. Our results show the effectiveness and efficiency of the techniques in discriminating between regular and malicious USB devices. We conclude that our proposed technique can be used for preventing the use of malicious USB devices in sensitive organizations. Future work should study the effect of different noise levels on the classification accuracy and explore intra-manufacturer classification of USB devices.},
  copyright = {Database copyright ProQuest LLC; ProQuest does not claim copyright in the individual underlying works.},
  isbn = {9781392162798},
  langid = {english},
  school = {Hamad Bin Khalifa University (Qatar)},
  keywords = {Applied sciences,Cybersecurity,Fingerprinting,Malicious,read1,RF emissions,RF-DNA,snippet,USB},
  file = {C:\Users\maaik\Zotero\storage\DJDGIU5T\Ibrahim - 2019 - RF-DNA Fingerprinting for the Detection of Malicio.pdf}
}

@misc{IdentifyingHIDbasedAttacks2019,
  title = {Identifying {{HID-based}} Attacks through Process Event Graph Using Guilt-by-Association Analysis {\textbar} {{Proceedings}} of the 3rd {{International Conference}} on {{Cryptography}}, {{Security}} and {{Privacy}}},
  year = {2019},
  month = jan,
  journal = {ACM Other conferences},
  doi = {10.1145/3309074.3309080},
  urldate = {2024-03-05},
  howpublished = {https://dl.acm.org/doi/10.1145/3309074.3309080},
  langid = {english},
  keywords = {read1,referencesChecked,snippet},
  file = {C\:\\Users\\maaik\\Zotero\\storage\\VTK6B6MH\\Huang et al. - 2019 - Identifying HID-based attacks through process even.pdf;C\:\\Users\\maaik\\Zotero\\storage\\EWF42GUJ\\3309074.html}
}

@misc{IntelligentSystemPreventing,
  title = {Intelligent {{System}} for {{Preventing Rubber Ducky Attacks Using Deep Learning Neural Networks}} {\textbar} {{IEEE Conference Publication}} {\textbar} {{IEEE Xplore}}},
  urldate = {2024-02-26},
  howpublished = {https://ieeexplore.ieee.org/abstract/document/9537497},
  keywords = {read1,snippet},
  file = {C\:\\Users\\maaik\\OneDrive\\Dokumente\\Uni\\Semester 6\\BA\\literature\\Intelligent_System_for_Preventing_Rubber_Ducky_Attacks_Using_Deep_Learning_Neural_Networks.pdf;C\:\\Users\\maaik\\Zotero\\storage\\EWS5WRDX\\9537497.html}
}

@misc{InteractiveGraphicNSA,
  title = {Interactive {{Graphic}}: {{The NSA}}'s {{Spy Catalog}} - {{SPIEGEL ONLINE}}},
  urldate = {2024-04-17},
  howpublished = {https://web.archive.org/web/20140102051417/https://www.spiegel.de/international/world/a-941262.html},
  file = {C:\Users\maaik\Zotero\storage\NDXMKPHT\a-941262.html}
}

@misc{Introduction,
  title = {Introduction},
  journal = {Qubes OS},
  urldate = {2024-03-13},
  abstract = {Qubes is a security-oriented, free and open-source operating system for personal computers that allows you to securely compartmentalize your digital life.},
  howpublished = {https://www.qubes-os.org/intro/},
  langid = {english},
  keywords = {read1},
  file = {C:\Users\maaik\Zotero\storage\3LWY48TT\intro.html}
}

@article{jiangMarionetteManipulateYour2023,
  title = {Marionette: {{Manipulate Your Touchscreen}} via {{A Charging Cable}}},
  shorttitle = {Marionette},
  author = {Jiang, Yan and Ji, Xiaoyu and Wang, Kai and Yan, Chen and Mitev, Richard and Sadeghi, Ahmad-Reza and Xu, Wenyuan},
  year = {2023},
  journal = {IEEE Transactions on Dependable and Secure Computing},
  pages = {1--17},
  issn = {1941-0018},
  doi = {10.1109/TDSC.2023.3326181},
  urldate = {2024-04-05},
  abstract = {The security of capacitive touchscreens is crucial since they have become the primary human-machine interface on smart devices. This paper presents Marionette, the first wired attack that creates ghost touches on capacitive touchscreens via charging cables and can manipulate the victim's devices with undesired consequences, e.g., establishing malicious Bluetooth connections. Our study provides a new threat vector against touchscreens that only requires connecting to a malicious charging port, which could be a public charging station, and is effective across various USB data blockers and power adapters. Despite the fact that smartphones employ abundant noise reduction and voltage management techniques, we manage to inject carefully crafted signals that can induce ghost touches within a chosen range. The underlying principle is to inject common-mode noises over the power line to avoid being effectively filtered yet affecting the touch measurement mechanism and synchronize the malicious noise with the screen measurement scanning cycles to place the ghost touches at target locations. We achieve three types of attacks, i.e., injection, alteration, and Denial-of-Service, and the evaluation of 12 commercial electronics, 6 power adapters, and 13 charging cables demonstrate the feasibility of Marionette.},
  keywords = {Capacitance,Capacitive touchscreen,Capacitors,conducted noise,Electrodes,Electromagnetic interference,ghost touch,read1,Sensors,Smart phones,Touch sensitive screens},
  file = {C\:\\Users\\maaik\\Zotero\\storage\\3LTGRHNB\\Jiang et al. - 2023 - Marionette Manipulate Your Touchscreen via A Char.pdf;C\:\\Users\\maaik\\Zotero\\storage\\DJRALLXI\\10288382.html}
}

@inproceedings{jinExperiencesHardwareTrojan2009,
  title = {Experiences in {{Hardware Trojan}} Design and Implementation},
  booktitle = {2009 {{IEEE International Workshop}} on {{Hardware-Oriented Security}} and {{Trust}}},
  author = {Jin, Yier and Kupp, Nathan and Makris, Yiorgos},
  year = {2009},
  month = jul,
  pages = {50--57},
  doi = {10.1109/HST.2009.5224971},
  urldate = {2024-03-19},
  abstract = {We report our experiences in designing and implementing several hardware Trojans within the framework of the Embedded System Challenge competition that was held as part of the Cyber Security Awareness Week (CSAW) at the Polytechnic Institute of New York University in October 2008. Due to the globalization of the Integrated Circuit (IC) manufacturing industry, hardware Trojans constitute an increasingly probable threat to both commercial and military applications. With traditional testing methods falling short in the quest of finding hardware Trojans, several specialized detection methods have surfaced. To facilitate research in this area, a better understanding of what Hardware Trojans would look like and what impact they would incur to an IC is required. To this end, we present eight distinct attack techniques employing Register Transfer Level (RTL) hardware Trojans to compromise the security of an Alpha encryption module implemented on a Digilent BASYS Spartan-3 FPGA board. Our work, which earned second place in the aforementioned competition, demonstrates that current RTL designs are, indeed, quite vulnerable to hardware Trojan attacks.},
  keywords = {Application specific integrated circuits,Circuit testing,Computer science,Computer security,Cryptography,Embedded system,Field programmable gate arrays,Foundries,Hardware design languages,Manufacturing,read1},
  file = {C\:\\Users\\maaik\\Zotero\\storage\\XH92QTE5\\Jin et al. - 2009 - Experiences in Hardware Trojan design and implemen.pdf;C\:\\Users\\maaik\\Zotero\\storage\\6CANAZ9V\\5224971.html}
}

@article{kangUSBWallNovelSecurity2017,
  title = {{{USBWall}}: {{A}} Novel Security Mechanism to Protect against Maliciously Reprogrammed {{USB}} Devices},
  shorttitle = {{{USBWall}}},
  author = {Kang, Myung and Saiedian, Hossein},
  year = {2017},
  month = jul,
  journal = {Information Security Journal: A Global Perspective},
  volume = {26},
  number = {4},
  pages = {166--185},
  publisher = {Taylor \& Francis},
  issn = {1939-3555},
  doi = {10.1080/19393555.2017.1329461},
  urldate = {2024-03-18},
  abstract = {Universal Serial Bus (USB) is a popular choice of interfacing computer systems with peripherals. With the increasing support of modern operating systems, it is now truly plug-and-play for most USB devices. However, this great convenience comes with a risk that can allow a device to perform arbitrary actions at any time while it is connected. Researchers have confirmed that a simple USB device such as a mass storage device can be disguised to have an additional functionality such as a keyboard. An unauthorized keyboard attachment can compromise the security of the host by allowing arbitrary keystrokes to enter the host. This undetectable threat differs from traditional virus that spreads via USB devices due to the location where it is stored and the way it behaves. We propose a novel way to protect the host via a software/hardware solution we named a USBWall. USBWall uses BeagleBone Black (BBB), a low-cost open-source computer, to act as a middleware to enumerate the devices on behalf of the host. We developed a program to assist the user to identify the risk of a device. We present a simulated USB device with malicious firmware to the USBWall. Based on the results, we confirm that using the USBWall to enumerate USB devices on behalf of the host eliminates risks to the hosts.},
  keywords = {Beaglebone black,human input devices (HID) attack,physical security,read1,SB security,snippet,transient device},
  file = {C:\Users\maaik\Zotero\storage\XLZBASWT\Kang and Saiedian - 2017 - USBWall A novel security mechanism to protect aga.pdf}
}

@inproceedings{kharrazUSBESAFEEndPointSolution2019,
  title = {\{\vphantom\}{{USBESAFE}}\vphantom\{\}: {{An}} \{\vphantom\}{{End-Point}}\vphantom\{\} {{Solution}} to {{Protect Against}} \{\vphantom\}{{USB-Based}}\vphantom\{\} {{Attacks}}},
  shorttitle = {\{\vphantom\}{{USBESAFE}}\vphantom\{\}},
  booktitle = {22nd {{International Symposium}} on {{Research}} in {{Attacks}}, {{Intrusions}} and {{Defenses}} ({{RAID}} 2019)},
  author = {Kharraz, Amin and Daley, Brandon L. and Baker, Graham Z. and Robertson, William and Kirda, Engin},
  year = {2019},
  pages = {89--103},
  urldate = {2024-03-05},
  isbn = {978-1-939133-07-6},
  langid = {english},
  keywords = {read1,snippet},
  file = {C:\Users\maaik\Zotero\storage\CF6Q3CWU\Kharraz et al. - 2019 - USBESAFE An End-Point Solution to Protect Aga.pdf}
}

@article{krombholzAdvancedSocialEngineering2015,
  title = {Advanced Social Engineering Attacks},
  author = {Krombholz, Katharina and Hobel, Heidelinde and Huber, Markus and Weippl, Edgar},
  year = {2015},
  month = jun,
  journal = {Journal of Information Security and Applications},
  series = {Special {{Issue}} on {{Security}} of {{Information}} and {{Networks}}},
  volume = {22},
  pages = {113--122},
  issn = {2214-2126},
  doi = {10.1016/j.jisa.2014.09.005},
  urldate = {2024-03-18},
  abstract = {Social engineering has emerged as a serious threat in virtual communities and is an effective means to attack information systems. The services used by today's knowledge workers prepare the ground for sophisticated social engineering attacks. The growing trend towards BYOD (bring your own device) policies and the use of online communication and collaboration tools in private and business environments aggravate the problem. In globally acting companies, teams are no longer geographically co-located, but staffed just-in-time. The decrease in personal interaction combined with a plethora of tools used for communication (e-mail, IM, Skype, Dropbox, LinkedIn, Lync, etc.) create new attack vectors for social engineering attacks. Recent attacks on companies such as the New York Times and RSA have shown that targeted spear-phishing attacks are an effective, evolutionary step of social engineering attacks. Combined with zero-day-exploits, they become a dangerous weapon that is often used by advanced persistent threats. This paper provides a taxonomy of well-known social engineering attacks as well as a comprehensive overview of advanced social engineering attacks on the knowledge worker.},
  keywords = {Attack scenarios,Bring your own device,Knowledge worker,Privacy,read1,Security,Social engineering},
  file = {C\:\\Users\\maaik\\OneDrive\\Dokumente\\Uni\\Semester 6\\BA\\literature\\advanced social engineering, krombholz et al 2014.pdf;C\:\\Users\\maaik\\Zotero\\storage\\Y8JZVYSH\\S2214212614001343.html}
}

@misc{kumarJuiceJackingUSB2020,
  type = {{{SSRN Scholarly Paper}}},
  title = {Juice {{Jacking}} - {{The USB Charger Scam}}},
  author = {Kumar, Yuvraj},
  year = {2020},
  month = apr,
  number = {3580209},
  address = {Rochester, NY},
  doi = {10.2139/ssrn.3580209},
  urldate = {2024-03-26},
  abstract = {Hackers have evolved from ground zero and are growing hard and tough on digital security inch-by-inch every day. When we say digital security, everything in the virtual world of information the "data" technology counts which includes complex industrial systems, mobile systems, handheld devices, entertainment systems, design and governance systems and so on; the list never ends. The more the technology is used by people, the more the data is generated and the more the data is generated, the more the insights one can get and that's what the curiosity behind the hackers getting too interested in getting hands on both the personal and commercial data where data is the new oil of 21 st century and beyond. Whether to benefit from the data or not, the hackers never leave any loophole of the systems which are a result of never thought innovation in the space of security breaches termed as "hacking". This article focuses on a similar equipment breach which uses USB (Universal Serial Bus) ports meant for to be used by passengers while in public transport places using which they can electrically charge their mobile phones, laptops, iPod and other portable devices. Using Juice jacking mechanism; the hackers have found a new way to compromise the equipment and steal the data only to provide the access back to the original owner for a hefty price.},
  langid = {english},
  keywords = {Aero  plane,Airports,Bus,Data security,Flight,Juice Jacking,Ransom,read1,Scam,snippet,Universal Serial Bus,USB,USB  Charger,USB  Port,USB Charger},
  file = {C:\Users\maaik\Zotero\storage\DH4HULYP\Kumar - 2020 - Juice Jacking - The USB Charger Scam.pdf}
}

@article{kushnerRealStoryStuxnet2013,
  title = {The Real Story of Stuxnet},
  author = {Kushner, David},
  year = {2013},
  month = mar,
  journal = {IEEE Spectrum},
  volume = {50},
  number = {3},
  pages = {48--53},
  issn = {1939-9340},
  doi = {10.1109/MSPEC.2013.6471059},
  urldate = {2024-04-23},
  abstract = {The paper discusses how Kaspersky Lab tracked down the malware that stymied Iran's nuclear-fuel enrichment program.},
  keywords = {Companies,Computer hacking,Computer security,Computer viruses,Cryptography,Malware},
  file = {C\:\\Users\\maaik\\Zotero\\storage\\8CURMCMU\\Kushner - 2013 - The real story of stuxnet.pdf;C\:\\Users\\maaik\\Zotero\\storage\\8TRT6T9J\\6471059.html}
}

@article{lauMactansInjectingMalware2013,
  title = {Mactans: {{Injecting Malware}} into {{iOS Devices}} via {{Malicious Chargers}}},
  author = {Lau, Billy and Jang, Yeongjin and Song, Chengyu and Wang, Tielei and Chung, Pak Ho},
  year = {2013},
  langid = {english},
  keywords = {read1,snippet},
  file = {C:\Users\maaik\Zotero\storage\NKNB4E6Y\Lau et al. - Mactans Injecting Malware into iOS Devices via Ma.pdf}
}

@article{lawalFacilitatingCyberenabledFraud2022,
  title = {Facilitating a Cyber-Enabled Fraud Using the {{O}}.{{MG}} Cable to Incriminate the Victim},
  author = {Lawal, Damola and Gresty, David and Gan, Diane and Hewitt, Louise},
  year = {2022},
  month = sep,
  journal = {International Journal of Computer and Systems Engineering (International Scholarly and Scientific Research \& Innovation)},
  volume = {16},
  number = {9},
  pages = {367--372},
  publisher = {{World Academy of Science, Engineering and Technology - Digital Commons, Fairfield University}},
  issn = {2313-3759},
  urldate = {2024-03-22},
  abstract = {This paper investigates the feasibility of using a programmable USB such as the O.MG Cable to perform a file tampering attack. Here, the O.MG Cable, an apparently harmless mobile device charger is used in an unauthorised way, to alter the content of a file (an accounts record-January\_Contributions.xlsx). The aim is to determine if a forensics analyst can reliably determine who has altered the target file; the O.MG Cable or the user of the machine. This work highlights some of the traces of the O.MG Cable left behind on the target computer itself such as the Product ID (PID) and Vendor ID (ID). Also discussed is the O.MG Cable's behaviour during the experiments. We determine if a forensics analyst could identify if any evidence has been left behind by the programmable device on the target file once it has been removed from the computer to establish if the analyst would be able to link the traces left by the O.MG Cable to the file tampering. It was discovered that the forensic analyst might mistake the actions of the O.MG Cable for the computer users. Experiments carried out in this work could further the discussion as to whether an innocent user could be punished for the unauthorised changes made by a programmable device.},
  copyright = {cc\_by\_4},
  langid = {english},
  keywords = {read1,snippet,very useful},
  file = {C\:\\Users\\maaik\\Zotero\\storage\\EL89AU3V\\Lawal et al. - 2022 - Facilitating a cyber-enabled fraud using the O.MG .pdf;C\:\\Users\\maaik\\Zotero\\storage\\SHQICM5U\\43047.html}
}

@article{leeRobustBootstrappingMemory2016,
  title = {Robust Bootstrapping Memory Analysis against Anti-Forensics},
  author = {Lee, Kyoungho and Hwang, Hyunuk and Kim, Kibom and Noh, BongNam},
  year = {2016},
  month = aug,
  journal = {Digital Investigation},
  volume = {18},
  pages = {S23-S32},
  issn = {1742-2876},
  doi = {10.1016/j.diin.2016.04.009},
  urldate = {2024-03-05},
  abstract = {Memory analysis is increasingly used to collect digital evidence in incident response. With the fast growth in memory analysis, however, anti-forensic techniques appear to prevent it from performing the bootstrapping steps --- operating system (OS) fingerprinting, Directory Table Base (DTB) identification, and obtaining kernel objects. Although most published research works try to solve anti forensics, they deal only with one element among the three steps. Thus, collapse in any of the three steps using the suggested robust algorithms leads to failure in the memory analysis. In this paper, we evaluate the latest memory forensic tools against anti-forensics. Then, we suggest a novel robust algorithm that guarantees the bootstrapping analysis steps. It uses only one kernel data structure called KiInitialPCR, which is a kernel global variable based on the kernel processor control region (KPCR) structure and has many fields with tolerance to mutation. We characterize the robust fields of the KPCR structure to use them for OS fingerprinting, DTB identification, and obtaining kernel objects. Then, we implement the KiInitialPCR-based analysis system. Therefore, we can analyze the compromised memory in spite of the interference of anti-forensics.},
  keywords = {Memory analysis,Memory forensics,OS fingerprinting,Robust analysis,Windows}
}

@misc{Libusb,
  title = {Libusb},
  urldate = {2024-03-14},
  howpublished = {https://libusb.info/},
  file = {C:\Users\maaik\Zotero\storage\GKHBH9XF\libusb.info.html}
}

@inproceedings{loeSandUSBInstallationfreeSandbox2016,
  title = {{{SandUSB}}: {{An}} Installation-Free Sandbox for {{USB}} Peripherals},
  shorttitle = {{{SandUSB}}},
  booktitle = {2016 {{IEEE}} 3rd {{World Forum}} on {{Internet}} of {{Things}} ({{WF-IoT}})},
  author = {Loe, Edwin Lupito and Hsiao, Hsu-Chun and Kim, Tiffany Hyun-Jin and Lee, Shao-Chuan and Cheng, Shin-Ming},
  year = {2016},
  month = dec,
  pages = {621--626},
  doi = {10.1109/WF-IoT.2016.7845512},
  urldate = {2024-03-18},
  abstract = {This work investigates two emerging attacks - Human Interface Device (HID) attack and Juice Jacking attack - that leverage USB peripherals, and proposes countermeasures to defend against them. These attacks can be easily reproduced using low-cost IoT prototyping boards (e.g., Raspberry Pi) and can bypass commercial antivirus tools. Although several research prototypes can effectively mitigate Juice Jacking and HID attacks, these prototypes encounter two challenges with respect to deployability: 1) Some require installation on host computers, which is inconvenient and users may lack permission to install software; 2) Some assume cryptographic keys for authentication, but such cryptographic operations may not be supported by legacy USB peripherals and hosts. To address these challenges, this paper presents the design and implementation of SandUSB, an installation-free and user-controllable security gadget for USB peripherals. Since SandUSB acts as an intermediary between the USB host and device, SandUSB can perform efficient scanning and analysis without changing USB devices or hosts. In addition, SandUSB provides a simple user interface (UI) to control and monitor connected USB devices, enabling users to identify malicious peripherals that masquerade as another type. This UI is complementary to the automatic defensive measures that SandUSB supports or cryptographic-based authentication. Our evaluation demonstrates that SandUSB can effectively defend against various USB attacks, including the HID attack and Juice Jacking, using affordable and easily accessible hardware.},
  keywords = {Computers,Cryptography,Keyboards,Payloads,Prototypes,read1,snippet,Universal Serial Bus},
  file = {C\:\\Users\\maaik\\Zotero\\storage\\LRSM8KDR\\Loe et al. - 2016 - SandUSB An installation-free sandbox for USB peri.pdf;C\:\\Users\\maaik\\Zotero\\storage\\ILKWZU9X\\7845512.html}
}

@inproceedings{maskiewiczMouseTrapExploiting2014,
  title = {Mouse {{Trap}}: {{Exploiting Firmware Updates}} in \{\vphantom\}{{USB}}\vphantom\{\} {{Peripherals}}},
  shorttitle = {Mouse {{Trap}}},
  booktitle = {8th {{USENIX Workshop}} on {{Offensive Technologies}} ({{WOOT}} 14)},
  author = {Maskiewicz, Jacob and Ellis, Benjamin and Mouradian, James and Shacham, Hovav},
  year = {2014},
  urldate = {2024-03-25},
  langid = {english},
  keywords = {read1},
  file = {C:\Users\maaik\Zotero\storage\RUDJV692\Maskiewicz et al. - 2014 - Mouse Trap Exploiting Firmware Updates in USB P.pdf}
}

@misc{MG_MG_2021,
  title = {{MG (@\_MG\_) / X}},
  year = {2021},
  month = may,
  journal = {X (formerly Twitter)},
  urldate = {2024-04-25},
  howpublished = {https://twitter.com/\_MG\_},
  langid = {ngerman},
  file = {C:\Users\maaik\Zotero\storage\ZPJT28NK\_MG_.html}
}

@misc{MGCable2019a,
  title = {O.{{MG Cable}}},
  year = {2019},
  month = dec,
  journal = {MG},
  urldate = {2024-04-20},
  abstract = {This page contains the highlights behind the initial project work behind the O.MG Cable. Slowly, it turned into a product! ---2020-02-07--- USB C and Micro variants are now up at Hak5 New video is on twitter and youtube ---2019-12-31--- Rev 1 of the O.MG Cable is now being},
  howpublished = {http://mg.lol/blog/omg-cable/},
  langid = {english},
  file = {C:\Users\maaik\Zotero\storage\UEWET6AC\omg-cable.html}
}

@misc{MicrosoftSecurityIntelligence2015,
  title = {Microsoft {{Security Intelligence Report Volume}} 20 {\textbar} {{July}} through {{December}}, 2015},
  year = {2015},
  publisher = {Microsoft},
  keywords = {read1},
  file = {C:\Users\maaik\OneDrive\Dokumente\Uni\Semester 6\BA\literature\Microsoft_Security_Intelligence_Report_Volume_20_English.pdf}
}

@misc{MITREATTCK,
  title = {{{MITRE ATT}}\&{{CK}}{\textregistered}},
  urldate = {2024-04-29},
  howpublished = {https://attack.mitre.org/\#},
  file = {C:\Users\maaik\Zotero\storage\8P25WXNP\attack.mitre.org.html}
}

@misc{mittalSamratashokKautilya2024,
  title = {Samratashok/{{Kautilya}}},
  author = {Mittal, Nikhil "SamratAshok"},
  year = {2024},
  month = mar,
  urldate = {2024-03-18},
  abstract = {Kautilya - Tool for easy use of Human Interface Devices for offensive security and penetration testing.}
}

@inproceedings{mohammadmoradiMakingWhitelistingBasedDefense2018,
  title = {Making {{Whitelisting-Based Defense Work Against BadUSB}}},
  booktitle = {Proceedings of the 2nd {{International Conference}} on {{Smart Digital Environment}}},
  author = {Mohammadmoradi, Hessam and Gnawali, Omprakash},
  year = {2018},
  month = oct,
  series = {{{ICSDE}}'18},
  pages = {127--134},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  doi = {10.1145/3289100.3289121},
  urldate = {2024-03-25},
  abstract = {Universal serial bus (USB) devices have widespread use in different computing platforms, including IoT gadgets, but this popularity makes them attractive targets for exploits and being used as an attack vector by malicious software. During recent years, several reports [17] ranked USB-based malware among top 10 popular malware. This security flaw can slow down the increasing penetration rate of IoT devices since most of those devices have USB ports. The research community and industry has tried to address USB security problem by implementing authentication protocols to protect users' private information and also scanning USB's storage space for any malicious software using their own repository of malware signatures, or simply disallowing use of USB devices on desktops. The new generation of USB malware does not hide in storage space, which means they are not detectable by conventional anti-malware. BadUSB is a malware recently introduced by security researchers. BadUSB modifies USB firmware and can attack all the systems which the infected USB is plugged in. The only applicable solution against this new generation of malware is whitelisting. However, generating a unique fingerprint for USB devices is challenging. In this paper, we propose an accurate USB feature based fingerprinting approach which helps us to create a list of trusted USBs as device whitelist. Our solution prevents and detects BadUSB and similar attacks by generating fingerprint from trusted USB devices' features and their primary usage. We verified the uniqueness of our generated fingerprints by analyzing real data which is collected from USB drives used by students in academic computer labs over one year. Our results indicate that our feature based whitelisting approach with an accuracy of 98.5\% can identify USB whitelist members.},
  isbn = {978-1-4503-6507-9},
  keywords = {BadUSB,read1,snippet,USB Malware,Whitelist},
  file = {C:\Users\maaik\Zotero\storage\8PPWZFPU\Mohammadmoradi and Gnawali - 2018 - Making Whitelisting-Based Defense Work Against Bad.pdf}
}

@inproceedings{monrosePasswordHardeningBased1999,
  title = {Password Hardening Based on Keystroke Dynamics},
  booktitle = {Proceedings of the 6th {{ACM}} Conference on {{Computer}} and Communications Security},
  author = {Monrose, Fabian and Reiter, Michael K. and Wetzel, Susanne},
  year = {1999},
  month = nov,
  series = {{{CCS}} '99},
  pages = {73--82},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  doi = {10.1145/319709.319720},
  urldate = {2024-03-18},
  abstract = {We present a novel approach to improving the security of passwords. In our approach, the legitimate user's typing patterns (e.g., durations of keystrokes, and latencies between keystrokes) are combined with the user's password to generate a hardened password that is convincingly more secure than conventional passwords against both online and offline attackers. In addition, our scheme automatically adapts to gradual changes in a user's typing patterns while maintaining the same hardened password across multiple logins, for use in file encryption or other applications requiring a longterm secret key. Using empirical data and a prototype implementation of our scheme, we give evidence that our approach is viable in practice, in terms of ease of use, improved security, and performance},
  isbn = {978-1-58113-148-2},
  keywords = {read1},
  file = {C:\Users\maaik\Zotero\storage\8N3QHJEP\Monrose et al. - 1999 - Password hardening based on keystroke dynamics.pdf}
}

@inproceedings{murraySeL4GeneralPurpose2013,
  title = {{{seL4}}: {{From General Purpose}} to a {{Proof}} of {{Information Flow Enforcement}}},
  shorttitle = {{{seL4}}},
  booktitle = {2013 {{IEEE Symposium}} on {{Security}} and {{Privacy}}},
  author = {Murray, Toby and Matichuk, Daniel and Brassil, Matthew and Gammie, Peter and Bourke, Timothy and Seefried, Sean and Lewis, Corey and Gao, Xin and Klein, Gerwin},
  year = {2013},
  month = may,
  pages = {415--429},
  issn = {1081-6011},
  doi = {10.1109/SP.2013.35},
  urldate = {2024-03-13},
  abstract = {In contrast to testing, mathematical reasoning and formal verification can show the absence of whole classes of security vulnerabilities. We present the, to our knowledge, first complete, formal, machine-checked verification of information flow security for the implementation of a general-purpose microkernel; namely seL4. Unlike previous proofs of information flow security for operating system kernels, ours applies to the actual 8, 830 lines of C code that implement seL4, and so rules out the possibility of invalidation by implementation errors in this code. We assume correctness of compiler, assembly code, hardware, and boot code. We prove everything else. This proof is strong evidence of seL4's utility as a separation kernel, and describes precisely how the general purpose kernel should be configured to enforce isolation and mandatory information flow control. We describe the information flow security statement we proved (a variant of intransitive noninterference), including the assumptions on which it rests, as well as the modifications that had to be made to seL4 to ensure it was enforced. We discuss the practical limitations and implications of this result, including covert channels not covered by the formal proof.},
  keywords = {Abstracts,Access control,formal verification,Hardware,information flow control,Kernel,Message systems,read1,Silicon},
  file = {C\:\\Users\\maaik\\Zotero\\storage\\FR7TYBPW\\Murray et al. - 2013 - seL4 From General Purpose to a Proof of Informati.pdf;C\:\\Users\\maaik\\Zotero\\storage\\HJRV5LYD\\6547124.html}
}

@inproceedings{muslimImplementationAnalysisUSB2020,
  title = {Implementation and {{Analysis}} of {{USB}} Based {{Password Stealer}} Using {{PowerShell}} in {{Google Chrome}} and {{Mozilla Firefox}}},
  booktitle = {2020 3rd {{International Conference}} on {{Computer}} and {{Informatics Engineering}} ({{IC2IE}})},
  author = {Muslim, Abdul Azies and Budiono, Avon and Almaarif, Ahmad},
  year = {2020},
  month = sep,
  pages = {421--426},
  doi = {10.1109/IC2IE50715.2020.9274566},
  urldate = {2024-03-14},
  abstract = {Along with the development of the Windows operating system, browser applications to surf the internet are also growing rapidly. The most widely used browsers today are Google Chrome and Mozilla Firefox. Both browsers have a username and password management feature that makes users login to a website easily, but saving usernames and passwords in the browser is quite dangerous because the stored data can be hacked using brute force attacks or read through a program. One way to get a username and password in the browser is to use a program that can read Google Chrome and Mozilla Firefox login data from the computer's internal storage and then show those data. In this study, an attack will be carried out by implementing Rubber Ducky using BadUSB to run the ChromePass and PasswordFox program and the PowerShell script using the Arduino Pro Micro Leonardo device as a USB Password Stealer. The results obtained from this study are the username and password on Google Chrome and Mozilla Firefox successfully obtained when the USB is connected to the target device, the average time of the attack is 14 seconds then sending it to the author's email.},
  keywords = {arduino pro micro leonardo,Browsers,chromepass,Hardware,Operating systems,Password,passwordfox,powershell,read1,rubber ducky,snippet,Software,Tools,Universal Serial Bus},
  file = {C\:\\Users\\maaik\\Zotero\\storage\\9PPHSRAG\\Muslim et al. - 2020 - Implementation and Analysis of USB based Password .pdf;C\:\\Users\\maaik\\Zotero\\storage\\MB9KIKEA\\9274566.html}
}

@inproceedings{nasutionIntegrationKleptowareKeyboard2014,
  title = {Integration of Kleptoware as Keyboard Keylogger for Input Recorder Using Teensy {{USB}} Development Board},
  booktitle = {2014 8th {{International Conference}} on {{Telecommunication Systems Services}} and {{Applications}} ({{TSSA}})},
  author = {Nasution, Surya Michrandi and Purwanto, Yudha and Virgono, Agus and Alam, Girindra Chandra},
  year = {2014},
  month = oct,
  pages = {1--5},
  doi = {10.1109/TSSA.2014.7065954},
  urldate = {2024-03-15},
  abstract = {Operating a computer to perform everyday tasks is sure to require input devices. The common human interface devices for operating a computer are mouse and keyboard. It means that modifying input devices can be alternative way to do monitoring and logging activity from a user. A keylogger is able to do such functions, but various hardware and software keylogger on the market are easily detectable either physically or by antivirus software. Those limitations can be avoided by hiding a keylogger directly into the keyboard. This key logger is implemented using Teensy 2.0 USB development board, which differs between the PS/2 and USB variant. Results of analysis shows that the keylogger in undetectable physically and works correctly just like any normal keyboard. The drawbacks are reduced performance as in increasing delay between held keystrokes, key ghosting and key jamming.},
  keywords = {Computers,Connectors,Hardware,Keyboard,Keyboards,Keystroke Logging,Kleptoware,Monitoring,PS/2,read1,Software,Teensy,Universal Serial Bus,USB},
  file = {C:\Users\maaik\Zotero\storage\343ZULZZ\Nasution et al. - 2014 - Integration of kleptoware as keyboard keylogger fo.pdf}
}

@inproceedings{neunerUSBlockBlockingUSBBased2018,
  title = {{{USBlock}}: {{Blocking USB-Based Keypress Injection Attacks}}},
  shorttitle = {{{USBlock}}},
  booktitle = {Data and {{Applications Security}} and {{Privacy XXXII}}},
  author = {Neuner, Sebastian and Voyiatzis, Artemios G. and Fotopoulos, Spiros and Mulliner, Collin and Weippl, Edgar R.},
  editor = {Kerschbaum, Florian and Paraboschi, Stefano},
  year = {2018},
  series = {Lecture {{Notes}} in {{Computer Science}}},
  pages = {278--295},
  publisher = {Springer International Publishing},
  address = {Cham},
  doi = {10.1007/978-3-319-95729-6_18},
  abstract = {The Universal Serial Bus (USB) is becoming a prevalent attack vector. Rubber Ducky and BadUSB are two recent classes of a whole spectrum of attacks carried out using fully-automated keypress injections through innocent-looking USB devices. So far, defense mechanisms are insufficient and rely on user participation in the trust decision.},
  isbn = {978-3-319-95729-6},
  langid = {english},
  keywords = {BadUSB,Linux kernel,read1,Security,snippet,System security,USB},
  file = {C:\Users\maaik\Zotero\storage\9NHCXHBE\Neuner et al. - 2018 - USBlock Blocking USB-Based Keypress Injection Att.pdf}
}

@article{nissimUSBbasedAttacks2017,
  title = {{{USB-based}} Attacks},
  author = {Nissim, Nir and Yahalom, Ran and Elovici, Yuval},
  year = {2017},
  month = sep,
  journal = {Computers \& Security},
  volume = {70},
  pages = {675--688},
  issn = {0167-4048},
  doi = {10.1016/j.cose.2017.08.002},
  urldate = {2024-03-06},
  abstract = {Attackers increasingly take advantage of innocent users who tend to use USB peripherals casually, assuming these peripherals are benign when in fact they may carry an embedded malicious payload that can be used to launch attacks. In recent years, USB peripherals have become an attractive tool for launching cyber-attacks. In this survey, we review 29 different USB-based attacks and utilize our new taxonomy to classify them into four major categories. These attacks target both individuals and organizations; utilize widely used USB peripherals, such as keyboards, mice, flash drives, smartphones etc. For each attack, we address the objective it achieves and identify the associated and vulnerable USB peripherals and hardware.},
  keywords = {Attack,Device,Malicious,Malware,read1,snippet,USB,very useful},
  file = {C\:\\Users\\maaik\\OneDrive\\Dokumente\\Uni\\Semester 6\\BA\\literature\\nissim et al. 2017.pdf;C\:\\Users\\maaik\\Zotero\\storage\\JP5P4TWH\\S0167404817301578.html}
}

@misc{NSAPlaysetTurnipschoolHtml,
  title = {{{NSA-Playset}}/Turnipschool.Html at Master {$\cdot$} Al1ce23/{{NSA-Playset}}},
  journal = {GitHub},
  urldate = {2024-04-17},
  abstract = {Mirror of the NSA Playset Project. Contribute to al1ce23/NSA-Playset development by creating an account on GitHub.},
  howpublished = {https://github.com/al1ce23/NSA-Playset/blob/master/turnipschool.html},
  langid = {english},
  file = {C:\Users\maaik\Zotero\storage\HDKM2YCH\NSA-Playset.html}
}

@misc{OmgpayloadsPayloadsLibrary,
  title = {Omg-Payloads/Payloads/Library at Master {$\cdot$} Hak5/Omg-Payloads},
  journal = {GitHub},
  urldate = {2024-05-06},
  abstract = {Official payload library for the O.MG line of products from Mischief Gadgets - hak5/omg-payloads},
  howpublished = {https://github.com/hak5/omg-payloads/tree/master/payloads/library},
  langid = {english},
  file = {C:\Users\maaik\Zotero\storage\XIQS2ALK\library.html}
}

@misc{paganiniTURNIPSCHOOLDIYNSA2015,
  title = {{{TURNIPSCHOOL DIY NSA}} Spying Tech from {{NSA Tao}} Catalog},
  author = {Paganini, Pierluigi},
  year = {2015},
  month = jan,
  journal = {Security Affairs},
  urldate = {2024-04-09},
  abstract = {Researchers have presented the TURNIPSCHOOL project and other activities that replicate NSA surveillance implants with cheaper and off the shelf components.},
  howpublished = {https://securityaffairs.com/32518/hacking/turnipschool-diy-nsa-spy.html},
  langid = {american},
  keywords = {snippet},
  file = {C:\Users\maaik\Zotero\storage\ZUA4BICK\turnipschool-diy-nsa-spy.html}
}

@article{phamUniversalSerialBus2011,
  title = {Universal Serial Bus Based Software Attacks and Protection Solutions},
  author = {Pham, Dung Vu and Syed, Ali and Halgamuge, Malka N.},
  year = {2011},
  month = apr,
  journal = {Digital Investigation},
  volume = {7},
  number = {3},
  pages = {172--184},
  issn = {1742-2876},
  doi = {10.1016/j.diin.2011.02.001},
  urldate = {2024-04-23},
  abstract = {Information security risks associated with Universal Serial Bus (USB) storage devices have been serious issues since 2003, which marked the wide adoption of USB technologies in the computing industry, especially in corporate networks. Due to the insecure design and the open standards of USB technologies, attackers have successfully exploited various vulnerabilities in USB protocols, USB embedded security software, USB drivers, and Windows Autoplay features to launch various software attacks against host computers and USB devices. The purposes of this paper are: (i) to provide an investigation on the currently identified USB based software attacks on host computers and USB storage devices, (ii) to identify the technology enablers of the attacks, and (iii) to form taxonomy of attacks. The results show that a multilayered security solution framework involving software implementations at the User Mode layer in the operating systems can help eliminate the root cause of the problem radically.},
  keywords = {Autorun,Flash drive,Hack tool,Malware,USB},
  file = {C\:\\Users\\maaik\\OneDrive\\Dokumente\\Uni\\Semester 6\\BA\\literature\\universal serial bus based software attacks and protection solutions.pdf;C\:\\Users\\maaik\\Zotero\\storage\\D5A2U5YH\\S1742287611000041.html}
}

@article{pridgenPickingTrashExploiting2017,
  title = {Picking up the Trash: {{Exploiting}} Generational {{GC}} for Memory Analysis},
  shorttitle = {Picking up the Trash},
  author = {Pridgen, Adam and Garfinkel, Simson and Wallach, Dan S.},
  year = {2017},
  month = mar,
  journal = {Digital Investigation},
  series = {{{DFRWS}} 2017 {{Europe}}},
  volume = {20},
  pages = {S20-S28},
  issn = {1742-2876},
  doi = {10.1016/j.diin.2017.01.002},
  urldate = {2024-03-05},
  abstract = {Memory analysis is slowly moving up the software stack. Early analysis efforts focused on core OS structures and services. As this field evolves, more information becomes accessible because analysis tools can build on foundational frameworks like Volatility and Rekall. This paper demonstrates and establishes memory analysis techniques for managed runtimes, namely the HotSpot Java Virtual Machine (JVM). We exploit the fact that residual artifacts remain in the JVM's heap to create basic timelines, reconstruct objects, and extract contextual information. These artifacts exist because the JVM copies objects from one place to another during garbage collection and fails to overwrite old data in a timely manner. This work focuses on the Hotspot JVM, but it can be generalized to other managed run-times like Microsoft .Net or Google's V8 JavaScript Engine.},
  keywords = {HotSpot JVM,Java,Malware analysis,Managed runtimes,Memory forensics},
  file = {C:\Users\maaik\Zotero\storage\ITBRXEFW\S1742287617300269.html}
}

@misc{ProgrammableHIDUSB,
  title = {Programmable {{HID USB Keystroke Dongle}}: {{Using}} the {{Teensy}} as a Pen Testing Device},
  urldate = {2024-03-18},
  howpublished = {http://www.irongeek.com/i.php?page=security/programmable-hid-usb-keystroke-dongle},
  keywords = {-,snippet},
  file = {C:\Users\maaik\Zotero\storage\2P9H3HZH\i.html}
}

@misc{RoadWarriorsBeware2016,
  title = {Road {{Warriors}}: {{Beware}} of `{{Video Jacking}}' -- {{Krebs}} on {{Security}}},
  shorttitle = {Road {{Warriors}}},
  year = {2016},
  month = aug,
  urldate = {2024-03-27},
  langid = {american},
  keywords = {snippet},
  file = {C:\Users\maaik\Zotero\storage\W7Z3H7IY\road-warriors-beware-of-video-jacking.html}
}

@misc{robertfiskRobertfiskUSG2016,
  title = {Robertfisk/{{USG}}},
  author = {{robertfisk}},
  year = {2016},
  urldate = {2024-03-18},
  abstract = {The USG is Good, not Bad},
  keywords = {snippet}
}

@article{rrushiQuantitativeEvaluationTarget,
  title = {A {{Quantitative Evaluation}} of the {{Target Selection}} of {{Havex ICS Malware Plugin}}},
  author = {Rrushi, Julian and Farhangi, Hassan and Howey, Clay and Carmichael, Kelly and Dabell, Joey},
  abstract = {While most of the current research focus is rightfully put on finding and mitigating vulnerabilities in industrial control systems (ICS), the opposite angle, namely researching operational weaknesses or unintelligent decisions of ICS malware that make them susceptible to detection, defensive entrapment, and forensics at large, is lesser explored. In this paper we perform a quantitative evaluation of the ability of Havex ICS malware plugin to correctly discover and query its target industrial control systems. We discuss the reverse engineering and analysis of various blocks of machine code of the Havex ICS malware plugin that pertain to its target selection process. We then quantify mathematically several performance measures of its target selection process. We find that despite its notoriety in the media as a nation state sponsored attack code, the Havex ICS malware plugin uses a plain and unsophisticated target selection process. That weakness in the malware opens the way to targeted defensive mechanisms to accurately neutralize the Havex malware and alike.},
  langid = {english},
  keywords = {read1},
  file = {C:\Users\maaik\Zotero\storage\JW5SL8GT\Rrushi et al. - A Quantitative Evaluation of the Target Selection .pdf}
}

@misc{RuleLanguageUSBGuard,
  title = {Rule {{Language}} {\textbar} {{USBGuard}}},
  urldate = {2024-04-28},
  howpublished = {https://usbguard.github.io/documentation/rule-language.html},
  file = {C:\Users\maaik\Zotero\storage\5NIWHARN\rule-language.html}
}

@misc{SamyKamkarKeySweeper,
  title = {Samy {{Kamkar}} - {{KeySweeper}}},
  urldate = {2024-03-25},
  howpublished = {https://samy.pl/keysweeper/},
  keywords = {snippet},
  file = {C:\Users\maaik\Zotero\storage\H5DQL2BM\keysweeper.html}
}

@misc{SamyKamkarUSBdriveby,
  title = {Samy {{Kamkar}} - {{USBdriveby}}: Exploiting {{USB}} in Style},
  urldate = {2024-03-18},
  howpublished = {http://samy.pl/usbdriveby/},
  keywords = {snippet},
  file = {C:\Users\maaik\Zotero\storage\9DK8UWTZ\usbdriveby.html}
}

@inproceedings{sanzgiriClassificationInsiderThreat2016,
  title = {Classification of {{Insider Threat Detection Techniques}}},
  booktitle = {Proceedings of the 11th {{Annual Cyber}} and {{Information Security Research Conference}}},
  author = {Sanzgiri, Ameya and Dasgupta, Dipankar},
  year = {2016},
  month = apr,
  series = {{{CISRC}} '16},
  pages = {1--4},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  doi = {10.1145/2897795.2897799},
  urldate = {2024-03-26},
  abstract = {Most insider attacks done by people who have the knowledge and technical know-how of launching such attacks. This topic has long been studied and many detection techniques were proposed to deal with insider threats. This short paper summarized and classified insider threat detection techniques based on strategies used for detection.},
  isbn = {978-1-4503-3752-6},
  keywords = {Access Control,Insider Threat Detection,read1,Risk Analysis},
  file = {C:\Users\maaik\Zotero\storage\UBUBVJLL\Sanzgiri and Dasgupta - 2016 - Classification of Insider Threat Detection Techniq.pdf}
}

@misc{sawersUSGovtPlant2011,
  title = {{{US Govt}}. Plant {{USB}} Sticks in Security Study, 60\% of Subjects Take the Bait},
  author = {Sawers, Paul},
  year = {2011},
  month = jun,
  journal = {TNW {\textbar} Insider},
  urldate = {2024-03-22},
  abstract = {You can have all the firewalls and Internet security software in the world, but sometimes there's just no accounting for human curiosity and stupidity. Bloomberg reports that The US Department of Homeland recently ran a test on government e},
  chapter = {Insider},
  howpublished = {https://thenextweb.com/news/us-govt-plant-usb-sticks-in-security-study-60-of-subjects-take-the-bait},
  langid = {english},
  file = {C:\Users\maaik\Zotero\storage\7J8PA4DT\us-govt-plant-usb-sticks-in-security-study-60-of-subjects-take-the-bait.html}
}

@article{schusterImpactMicrosoftWindows2008,
  title = {The Impact of {{Microsoft Windows}} Pool Allocation Strategies on Memory Forensics},
  author = {Schuster, Andreas},
  year = {2008},
  month = sep,
  journal = {Digital Investigation},
  series = {The {{Proceedings}} of the {{Eighth Annual DFRWS Conference}}},
  volume = {5},
  pages = {S58-S64},
  issn = {1742-2876},
  doi = {10.1016/j.diin.2008.05.007},
  urldate = {2024-03-05},
  abstract = {An image of a computer's physical memory can provide a forensic examiner with a wealth of information. A small area of system memory, the nonpaged pool, contains lots of information about currently and formerly active processes. As this paper shows, more than 90\% of such information can be retrieved even 24h after process termination under optimum conditions. Great care must be taken as the acquisition process usually affects the memory contents to be acquired. In order minimize the impact on volatile data, this paper for the first time analyzes the pool allocation mechanism of the Microsoft Windows operating system. It describes a test arrangement, which allows to obtain a time series of physical memory images, while it also reduces the effect on the observed operating system. Using this environment it was found that allocations from the nonpaged pool are reused based on their size and a last in-first out schedule. In addition, a passive memory compaction strategy may apply. So, the creation of a new object is likely to eradicate the evidence of an object of the same class that was destructed just before. The paper concludes with a discussion of the implications for incident response procedures, forensic examinations, and the creation of forensic tools.},
  keywords = {Microsoft Windows,Pool memory,Process Persistence,Volatile data}
}

@misc{shanmugapriyaSurveyBiometricKeystroke2009,
  title = {A {{Survey}} of {{Biometric}} Keystroke {{Dynamics}}: {{Approaches}}, {{Security}} and {{Challenges}}},
  shorttitle = {A {{Survey}} of {{Biometric}} Keystroke {{Dynamics}}},
  author = {Shanmugapriya, D. and Padmavathi, G.},
  year = {2009},
  month = oct,
  number = {arXiv:0910.0817},
  eprint = {0910.0817},
  primaryclass = {cs},
  publisher = {arXiv},
  doi = {10.48550/arXiv.0910.0817},
  urldate = {2024-03-18},
  abstract = {Biometrics technologies are gaining popularity today since they provide more reliable and efficient means of authentication and verification. Keystroke Dynamics is one of the famous biometric technologies, which will try to identify the authenticity of a user when the user is working via a keyboard. The authentication process is done by observing the change in the typing pattern of the user. A comprehensive survey of the existing keystroke dynamics methods, metrics, different approaches are given in this study. This paper also discusses about the various security issues and challenges faced by keystroke dynamics.},
  archiveprefix = {arxiv},
  keywords = {Computer Science - Cryptography and Security,read1},
  file = {C\:\\Users\\maaik\\Zotero\\storage\\C76TVSJD\\Shanmugapriya and Padmavathi - 2009 - A Survey of Biometric keystroke Dynamics Approach.pdf;C\:\\Users\\maaik\\Zotero\\storage\\DDWUBA4R\\0910.html}
}

@misc{SharpIdeasDownloads2006,
  title = {Sharp {{Ideas}}: {{Downloads}}},
  shorttitle = {Sharp {{Ideas}}},
  year = {2006},
  month = jul,
  urldate = {2024-04-10},
  howpublished = {https://web.archive.org/web/20060705045349/http://www.sharp-ideas.net/downloads.php},
  keywords = {snippet}
}

@misc{Srlabsbadusbblackhatv1Pdf2014,
  title = {Srlabs-Badusb-Blackhat-v1.Pdf},
  year = {2014},
  month = aug,
  urldate = {2024-03-06},
  howpublished = {https://radetskiy.files.wordpress.com/2014/08/srlabs-badusb-blackhat-v1.pdf},
  keywords = {read1,snippet},
  file = {C:\Users\maaik\Zotero\storage\9GUE4IFR\srlabs-badusb-blackhat-v1.pdf}
}

@misc{SSDForensics2014,
  title = {{{SSD Forensics}} 2014. {{Recovering Evidence}} from {{SSD Drives}}: {{Understanding TRIM}}, {{Garbage Collection}} and {{Exclusions}}},
  urldate = {2024-03-15},
  howpublished = {https://belkasoft.com/ssd-2014},
  file = {C:\Users\maaik\Zotero\storage\BTIDQ4DG\ssd-2014.html}
}

@article{staffNSAUsesPowerful2013,
  title = {The {{NSA Uses Powerful Toolbox}} in {{Effort}} to {{Spy}} on {{Global Networks}}},
  author = {Staff, {\relax SPIEGEL}},
  year = {2013},
  month = dec,
  journal = {Der Spiegel},
  issn = {2195-1349},
  urldate = {2024-04-09},
  abstract = {The NSA's TAO hacking unit is considered to be the intelligence agency's top secret weapon. It maintains its own covert network, infiltrates computers around the world and even intercepts shipping deliveries to plant back doors in electronics ordered by those it is targeting.},
  chapter = {International},
  langid = {english},
  keywords = {Government Communications Headquarters,International,National Security Agency,NSA Spying Scandal,snippet,United Kingdom,United States,World},
  file = {C:\Users\maaik\Zotero\storage\PDISJUSG\the-nsa-uses-powerful-toolbox-in-effort-to-spy-on-global-networks-a-940969.html}
}

@article{stuttgenAntiforensicResilientMemory2013,
  title = {Anti-Forensic Resilient Memory Acquisition},
  author = {St{\"u}ttgen, Johannes and Cohen, Michael},
  year = {2013},
  month = aug,
  journal = {Digital Investigation},
  series = {The {{Proceedings}} of the {{Thirteenth Annual DFRWS Conference}}},
  volume = {10},
  pages = {S105-S115},
  issn = {1742-2876},
  doi = {10.1016/j.diin.2013.06.012},
  urldate = {2024-03-05},
  abstract = {Memory analysis has gained popularity in recent years proving to be an effective technique for uncovering malware in compromised computer systems. The process of memory acquisition presents unique evidentiary challenges since many acquisition techniques require code to be run on a potential compromised system, presenting an avenue for anti-forensic subversion. In this paper, we examine a number of simple anti-forensic techniques and test a representative sample of current commercial and free memory acquisition tools. We find that current tools are not resilient to very simple anti-forensic measures. We present a novel memory acquisition technique, based on direct page table manipulation and PCI hardware introspection, without relying on operating system facilities - making it more difficult to subvert. We then evaluate this technique's further vulnerability to subversion by considering more advanced anti-forensic attacks.},
  keywords = {Anti forensics,Computer security,Incident response,Information security,Live forensics,Malware,Memory acquisition,Memory forensics},
  file = {C:\Users\maaik\Zotero\storage\XBAYXBRD\S1742287613000583.html}
}

@article{sylvePoolTagQuick2016,
  title = {Pool Tag Quick Scanning for Windows Memory Analysis},
  author = {Sylve, Joe T. and Marziale, Vico and Richard, Golden G.},
  year = {2016},
  month = mar,
  journal = {Digital Investigation},
  series = {{{DFRWS}} 2016 {{Europe}}},
  volume = {16},
  pages = {S25-S32},
  issn = {1742-2876},
  doi = {10.1016/j.diin.2016.01.005},
  urldate = {2024-03-05},
  abstract = {Pool tag scanning is a process commonly used in memory analysis in order to locate kernel object allocations, enabling investigators to discover evidence of artifacts that may have been freed or otherwise maliciously hidden from the operating system. The fastest current scanning techniques require an exhaustive search of physical memory, a process that has a linear time complexity over physical memory size. We propose a novel technique that we are calling ``pool tag quick scanning'' that is able to reduce the scanning space by 1--2 orders of magnitude, resulting in much faster discovery of targeted kernel data structures, while maintaining a high degree of accuracy.},
  keywords = {Incident response,Live forensics,Memory analysis,Memory forensics,Microsoft windows,Pool scanning,Pool tag scanning}
}

@misc{TeensyUSBDevelopment,
  title = {Teensy {{USB Development Board}}},
  urldate = {2024-03-18},
  howpublished = {https://www.pjrc.com/teensy/},
  file = {C:\Users\maaik\Zotero\storage\CVPY86BT\teensy.html}
}

@article{tetmeyerSecurityThreatsMitigating2010,
  title = {Security {{Threats}} and {{Mitigating Risk}} for {{USB Devices}}},
  author = {Tetmeyer, Annette and Saiedian, Hossein},
  year = {2010},
  journal = {IEEE Technology and Society Magazine},
  volume = {29},
  number = {4},
  pages = {44--49},
  issn = {1937-416X},
  doi = {10.1109/MTS.2010.939228},
  urldate = {2024-03-15},
  abstract = {Computer users have consistently sought out improvements to devices for removable storage to provide the quickest and most efficient means of transferring data from one computer to another. Portable storage media have always been fraught with risk. Security considerations have always been a concern and organizations have tried to mitigate these threats using many controls. However, since threats are constantly evolving and changing, security controls must also evolve and change to keep up with these threats.},
  keywords = {Authentication,Portable media players,read1,snippet,Storage automation,Transient analysis,Universal Serial Bus},
  file = {C\:\\Users\\maaik\\Zotero\\storage\\M3HVH23D\\Tetmeyer and Saiedian - 2010 - Security Threats and Mitigating Risk for USB Devic.pdf;C\:\\Users\\maaik\\Zotero\\storage\\S38K474G\\5661663.html}
}

@article{thomasDuckHuntMemory2021,
  title = {Duck {{Hunt}}: {{Memory}} Forensics of {{USB}} Attack Platforms},
  shorttitle = {Duck {{Hunt}}},
  author = {Thomas, Tyler and Piscitelli, Mathew and Nahar, Bhavik Ashok and Baggili, Ibrahim},
  year = {2021},
  month = jul,
  journal = {Forensic Science International: Digital Investigation},
  volume = {37},
  pages = {301190},
  issn = {2666-2817},
  doi = {10.1016/j.fsidi.2021.301190},
  urldate = {2024-02-26},
  abstract = {To explore the memory forensic artifacts generated by USB-based attack platforms, we analyzed two of the most popular commercially available devices, Hak5's USB Rubber Ducky and Bash Bunny. We present two open source Volatility plugins, usbhunt and dhcphunt, which extract artifacts generated by these USB attacks from Windows 10 system memory images. Such artifacts include driver-related diagnostic events, unique device identifiers, and DHCP client logs. Our tools are capable of extracting metadata-rich Windows diagnostic events generated by any USB device. The device identifiers presented in this work may also be used to definitively detect device usage. Likewise, the DHCP logs we carve from memory may be useful in the forensic analysis of other network-connected peripherals. We also quantify how long these artifacts remain recoverable in memory. Our experiments demonstrated that some Indicators of Compromise (IOCs) remain in memory for at least 24~h.},
  keywords = {Bash Bunny,Memory forensics,Network devices,read1,referencesChecked,Rubber Ducky,USB Devices,Volatility},
  file = {C\:\\Users\\maaik\\Zotero\\storage\\USCADE5L\\Thomas et al. - 2021 - Duck Hunt Memory forensics of USB attack platform.pdf;C\:\\Users\\maaik\\Zotero\\storage\\BIYAHVTT\\S2666281721000986.html}
}

@article{thomasMemoryFORESHADOWMemory2020,
  title = {Memory {{FORESHADOW}}: {{Memory FOREnSics}} of {{HArDware CryptOcurrency}} Wallets -- {{A Tool}} and {{Visualization Framework}}},
  shorttitle = {Memory {{FORESHADOW}}},
  author = {Thomas, Tyler and Piscitelli, Mathew and Shavrov, Ilya and Baggili, Ibrahim},
  year = {2020},
  month = jul,
  journal = {Forensic Science International: Digital Investigation},
  volume = {33},
  pages = {301002},
  issn = {2666-2817},
  doi = {10.1016/j.fsidi.2020.301002},
  urldate = {2024-03-05},
  abstract = {We present Memory FORESHADOW: Memory FOREnSics of HArDware cryptOcurrency Wallets. To the best of our knowledge, this is the primary account of cryptocurrency hardware wallet client memory forensics. Our exploratory analysis revealed forensically relevant data in memory including transaction history, extended public keys, passphrases, and unique device identifiers. Data extracted with FORESHADOW can be used to associate a hardware wallet with a computer and allow an observer to deanonymize all past and future transactions due to hierarchical deterministic wallet address derivation. Additionally, our novel visualization framework enabled us to measure both the persistence and integrity of artifacts produced by the Ledger and Trezor hardware wallet clients. The framework can be generalized for use in future memory forensics work.},
  keywords = {Bitcoin,Cryptocurrency,Data recovery,Ethereum,Hardware wallet,Ledger,Memory Forensics,Trezor},
  file = {C\:\\Users\\maaik\\Zotero\\storage\\VFUK4CNG\\Thomas et al. - 2020 - Memory FORESHADOW Memory FOREnSics of HArDware Cr.pdf;C\:\\Users\\maaik\\Zotero\\storage\\UC5JY5BB\\S2666281720302511.html}
}

@inproceedings{tianDefendingMaliciousUSB2015,
  title = {Defending {{Against Malicious USB Firmware}} with {{GoodUSB}}},
  booktitle = {Proceedings of the 31st {{Annual Computer Security Applications Conference}}},
  author = {Tian, Dave Jing and Bates, Adam and Butler, Kevin},
  year = {2015},
  month = dec,
  series = {{{ACSAC}} '15},
  pages = {261--270},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  doi = {10.1145/2818000.2818040},
  urldate = {2024-03-06},
  abstract = {USB attacks are becoming more sophisticated. Rather than using USB devices solely as a delivery mechanism for host-side exploits, attackers are targeting the USB stack itself, embedding malicious code in device firmware to covertly request additional USB interfaces, providing unacknowledged and malicious functionality that lies outside the apparent purpose of the device. This allows for attacks such as BadUSB, where a USB storage device with malicious firmware is capable of covertly acting as a keyboard as well, allowing it to inject malicious scripts into the host machine. We observe that the root cause of such attacks is that the USB Stack exposes a set of unrestricted device privileges and note that the most reliable information about a device's capabilities comes from the end user's expectation of the device's functionality. We design and implement GoodUSB, a mediation architecture for the Linux USB Stack. We defend against BadUSB attacks by enforcing permissions based on user expectations of device functionality. GoodUSB includes a security image component to simplify use, and a honeypot mechanism for observing suspicious USB activities. GoodUSB introduces only 5.2\% performance overhead compared to the unmodified Linux USB subsystem. It is an important step forward in defending against USB attacks and towards allowing the safe deployment of USB devices in the enterprise.},
  isbn = {978-1-4503-3682-6},
  keywords = {BadUSB,Linux Kernel,read1,snippet,USB},
  file = {C:\Users\maaik\Zotero\storage\TC3SVJJW\Tian et al. - 2015 - Defending Against Malicious USB Firmware with Good.pdf}
}

@inproceedings{tianMakingUSBGreat2016,
  title = {Making \{\vphantom\}{{USB}}\vphantom\{\} {{Great Again}} with \{\vphantom\}{{USBFILTER}}\vphantom\{\}},
  booktitle = {25th {{USENIX Security Symposium}} ({{USENIX Security}} 16)},
  author = {Tian, Dave (Jing) and Scaife, Nolen and Bates, Adam and Butler, Kevin and Traynor, Patrick},
  year = {2016},
  pages = {415--430},
  urldate = {2024-03-05},
  isbn = {978-1-931971-32-4},
  langid = {english},
  keywords = {read1,snippet},
  file = {C:\Users\maaik\Zotero\storage\B2EYZVP9\Tian et al. - 2016 - Making USB Great Again with USBFILTER .pdf}
}

@inproceedings{tianProvUSBBlocklevelProvenanceBased2016,
  title = {{{ProvUSB}}: {{Block-level Provenance-Based Data Protection}} for {{USB Storage Devices}}},
  shorttitle = {{{ProvUSB}}},
  booktitle = {Proceedings of the 2016 {{ACM SIGSAC Conference}} on {{Computer}} and {{Communications Security}}},
  author = {Tian, Dave (Jing) and Bates, Adam and Butler, Kevin R.B. and Rangaswami, Raju},
  year = {2016},
  month = oct,
  series = {{{CCS}} '16},
  pages = {242--253},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  doi = {10.1145/2976749.2978398},
  urldate = {2024-03-06},
  abstract = {Defenders of enterprise networks have a critical need to quickly identify the root causes of malware and data leakage. Increasingly, USB storage devices are the media of choice for data exfiltration, malware propagation, and even cyber-warfare. We observe that a critical aspect of explaining and preventing such attacks is understanding the provenance of data (i.e., the lineage of data from its creation to current state) on USB devices as a means of ensuring their safe usage. Unfortunately, provenance tracking is not offered by even sophisticated modern devices. This work presents ProvUSB, an architecture for fine-grained provenance collection and tracking on smart USB devices. ProvUSB maintains data provenance by recording reads and writes at the block layer and reliably identifying hosts editing those blocks through attestation over the USB channel. Our evaluation finds that ProvUSB imposes a one-time 850 ms overhead during USB enumeration, but approaches nearly-bare-metal runtime performance (90\% of throughput) on larger files during normal execution, and less than 0.1\% storage overhead for provenance in real-world workloads. ProvUSB thus provides essential new techniques in the defense of computer systems and USB storage devices.},
  isbn = {978-1-4503-4139-4},
  keywords = {embedded systems security,provenance,read1,snippet,TPM,USB,USB storage devices},
  file = {C:\Users\maaik\Zotero\storage\K5E3248U\Tian et al. - 2016 - ProvUSB Block-level Provenance-Based Data Protect.pdf}
}

@inproceedings{tianSoKPlugPray2018,
  title = {{{SoK}}: "{{Plug}} \& {{Pray}}" {{Today}} -- {{Understanding USB Insecurity}} in {{Versions}} 1 {{Through C}}},
  shorttitle = {{{SoK}}},
  booktitle = {2018 {{IEEE Symposium}} on {{Security}} and {{Privacy}} ({{SP}})},
  author = {Tian, Jing and Scaife, Nolen and Kumar, Deepak and Bailey, Michael and Bates, Adam and Butler, Kevin},
  year = {2018},
  month = may,
  pages = {1032--1047},
  issn = {2375-1207},
  doi = {10.1109/SP.2018.00037},
  urldate = {2024-03-05},
  abstract = {USB-based attacks have increased in complexity in recent years. Modern attacks now incorporate a wide range of attack vectors, from social engineering to signal injection. To address these challenges, the security community has responded with a growing set of fragmented defenses. In this work, we survey and categorize USB attacks and defenses, unifying observations from both peer-reviewed research and industry. Our systematization extracts offensive and defensive primitives that operate across layers of communication within the USB ecosystem. Based on our taxonomy, we discover that USB attacks often abuse the trust-by-default nature of the ecosystem, and transcend different layers within a software stack; none of the existing defenses provide a complete solution, and solutions expanding multiple layers are most effective. We then develop the first formal verification of the recently released USB Type-C Authentication specification, and uncover fundamental flaws in the specification's design. Based on the findings from our systematization, we observe that while the spec has successfully pinpointed an urgent need to solve the USB security problem, its flaws render these goals unattainable. We conclude by outlining future research directions to ensure a safer computing experience with USB.},
  keywords = {Authentication,Companies,Data transfer,Ecosystems,Protocols,read1,Security,Type C,Universal Serial Bus,USB,very useful},
  file = {C\:\\Users\\maaik\\Zotero\\storage\\MMQYWG6Z\\Tian et al. - 2018 - SoK Plug & Pray Today – Understanding USB Insec.pdf;C\:\\Users\\maaik\\Zotero\\storage\\P72EQCY9\\8418652.html}
}

@inproceedings{tischerUsersReallyPlug2016,
  title = {Users {{Really Do Plug}} in {{USB Drives They Find}}},
  booktitle = {2016 {{IEEE Symposium}} on {{Security}} and {{Privacy}} ({{SP}})},
  author = {Tischer, Matthew and Durumeric, Zakir and Foster, Sam and Duan, Sunny and Mori, Alec and Bursztein, Elie and Bailey, Michael},
  year = {2016},
  month = may,
  pages = {306--319},
  issn = {2375-1207},
  doi = {10.1109/SP.2016.26},
  urldate = {2024-03-14},
  abstract = {We investigate the anecdotal belief that end users will pick up and plug in USB flash drives they find by completing a controlled experiment in which we drop 297 flash drives on a large university campus. We find that the attack is effective with an estimated success rate of 45 -- 98\% and expeditious with the first drive connected in less than six minutes. We analyze the types of drives users connected and survey those users to understand their motivation and security profile. We find that a drive's appearance does not increase attack success. Instead, users connect the drive with the altruistic intention of finding the owner. These individuals are not technically incompetent, but are rather typical community members who appear to take more recreational risks then their peers. We conclude with lessons learned and discussion on how social engineering attacks -- while less technical -- continue to be an effective attack vector that our community has yet to successfully address.},
  keywords = {Atmospheric measurements,Computers,Drives,Joining processes,Particle measurements,read1,Security,snippet,social engineering,Universal Serial Bus,USB},
  file = {C\:\\Users\\maaik\\Zotero\\storage\\66L8XJ9U\\Tischer et al. - 2016 - Users Really Do Plug in USB Drives They Find.pdf;C\:\\Users\\maaik\\Zotero\\storage\\KZZ2S95P\\7546509.html}
}

@misc{USBIFUSBIF,
  title = {About {{USB-IF}} {\textbar} {{USB-IF}}},
  urldate = {2024-04-22},
  howpublished = {https://www.usb.org/about},
  file = {C:\Users\maaik\Zotero\storage\7DZVFEHF\about.html}
}

@misc{USBKillDevices,
  title = {{{USB Kill}} Devices for Pentesting \& Law-Enforcement},
  journal = {USBKill},
  urldate = {2024-03-22},
  abstract = {The USBKill, or USB Killer is a device used by pentesters, industrial clients and law-enforcement world-wide to perform security checks against power surge attacks on USB ports. USBKill.com is manufacturer of the USB Kill device, USBKill Shield - which defends against USB Attacks like a USB Condom \& other accessories},
  howpublished = {https://usbkill.com/},
  keywords = {snippet},
  file = {C:\Users\maaik\Zotero\storage\NZDT6QBV\usbkill.com.html}
}

@misc{USBRubberDucky,
  title = {{{USB Rubber Ducky}} - {{Hak5}}},
  urldate = {2024-04-20},
  howpublished = {https://shop.hak5.org/products/usb-rubber-ducky},
  file = {C:\Users\maaik\Zotero\storage\5I6KN8P9\usb-rubber-ducky.html}
}

@misc{USBRubberDucky2021,
  title = {{{USB Rubber Ducky Detection}} by Using {{Heuristic Rules}} {\textbar} {{IEEE Conference Publication}} {\textbar} {{IEEE Xplore}}},
  year = {2021},
  month = feb,
  urldate = {2024-02-26},
  howpublished = {https://ieeexplore.ieee.org/abstract/document/9397064},
  keywords = {read1,snippet},
  file = {C\:\\Users\\maaik\\OneDrive\\Dokumente\\Uni\\Semester 6\\BA\\literature\\USB_Rubber_Ducky_Detection_by_using_Heuristic_Rules.pdf;C\:\\Users\\maaik\\Zotero\\storage\\FFPJZSGV\\9397064.html}
}

@misc{USBRubberDucky2023,
  title = {{{USB Rubber Ducky}} by {{Hak5}} {\textbar} {{USB Rubber Ducky}}},
  year = {2023},
  month = oct,
  urldate = {2024-04-20},
  abstract = {DuckyScript™ is the programming language of the USB Rubber Ducky™, Hak5{\textregistered} hotplug attack gear and officially licensed devices (Trademark Hak5 LLC. Copyright {\copyright} 2010 Hak5 LLC. All rights reserved.)},
  howpublished = {https://docs.hak5.org/hak5-usb-rubber-ducky/},
  langid = {english},
  file = {C:\Users\maaik\Zotero\storage\PWNWUC45\hak5-usb-rubber-ducky.html}
}

@misc{vijayanInfectedUSBDrive2010,
  title = {Infected {{USB}} Drive Blamed for '08 Military Cyber Breach},
  author = {Vijayan, Jaikumar},
  year = {2010},
  month = aug,
  journal = {Computerworld},
  urldate = {2024-03-15},
  abstract = {A USB drive loaded with malware was used to compromise sensitive military networks in 2008, according to U.S Deputy Defense Secretary William Lynn.},
  howpublished = {https://www.computerworld.com/article/2514879/infected-usb-drive-blamed-for--08-military-cyber-breach.html},
  langid = {english},
  file = {C:\Users\maaik\Zotero\storage\LJEQKVMK\infected-usb-drive-blamed-for--08-military-cyber-breach.html}
}

@article{vomelSurveyMainMemory2011,
  title = {A Survey of Main Memory Acquisition and Analysis Techniques for the Windows Operating System},
  author = {V{\"o}mel, Stefan and Freiling, Felix C.},
  year = {2011},
  month = jul,
  journal = {Digital Investigation},
  volume = {8},
  number = {1},
  pages = {3--22},
  issn = {1742-2876},
  doi = {10.1016/j.diin.2011.06.002},
  urldate = {2024-03-05},
  abstract = {Traditional, persistent data-oriented approaches in computer forensics face some limitations regarding a number of technological developments, e.g., rapidly increasing storage capabilities of hard drives, memory-resident malicious software applications, or the growing use of encryption routines, that make an in-time investigation more and more difficult. In order to cope with these issues, security professionals have started to examine alternative data sources and emphasize the value of volatile system information in RAM more recently. In this paper, we give an overview of the prevailing techniques and methods to collect and analyze a computer's memory. We describe the characteristics, benefits, and drawbacks of the individual solutions and outline opportunities for future research in this evolving field of IT security.},
  keywords = {Live forensics,Memory acquisition,Memory analysis,Memory forensics,Microsoft windows},
  file = {C:\Users\maaik\Zotero\storage\4DQ7QP7K\S1742287611000508.html}
}

@inproceedings{wangExploitingSmartphoneUSB2010,
  title = {Exploiting Smart-Phone {{USB}} Connectivity for Fun and Profit},
  booktitle = {Proceedings of the 26th {{Annual Computer Security Applications Conference}}},
  author = {Wang, Zhaohui and Stavrou, Angelos},
  year = {2010},
  month = dec,
  series = {{{ACSAC}} '10},
  pages = {357--366},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  doi = {10.1145/1920261.1920314},
  urldate = {2024-03-06},
  abstract = {The Universal Serial Bus (USB) connection has become the de-facto standard for both charging and data transfers for smart phone devices including Google's Android and Apple's iPhone. To further enhance their functionality, smart phones are equipped with programmable USB hardware and open source operating systems that empower them to alter the default behavior of the end-to-end USB communications. Unfortunately, these new capabilities coupled with the inherent trust that users place on the USB physical connectivity and the lack of any protection mechanisms render USB a insecure link, prone to exploitation. To demonstrate this new avenue of exploitation, we introduce novel attack strategies that exploit the functional capabilities of the USB physical link. In addition, we detail how a sophisticated adversary who has under his control one of the connected devices can subvert the other. This includes attacks where a compromised smart phone poses as a Human Interface Device (HID) and sends keystrokes in order to control the victim host. Moreover, we explain how to boot a smart phone device into USB host mode and take over another phone using a specially crafted cable. Finally, we point out the underlying reasons behind USB exploits and propose potential defense mechanisms that would limit or even prevent such USB borne attacks.},
  isbn = {978-1-4503-0133-6},
  keywords = {read1,snippet},
  file = {C:\Users\maaik\Zotero\storage\2BEGNFBT\Wang and Stavrou - 2010 - Exploiting smart-phone USB connectivity for fun an.pdf}
}

@misc{WaybackMachine2018,
  title = {Wayback {{Machine}}},
  year = {2018},
  month = jan,
  urldate = {2024-04-22},
  howpublished = {https://web.archive.org/web/20180130144424/https:/fl.hw.cz/docs/usb/usb10doc.pdf},
  file = {C:\Users\maaik\Zotero\storage\Q8CDAKIH\2018 - Wayback Machine.pdf}
}

@misc{WhatAreMalicious,
  title = {What Are Malicious Usb Keys and How to Create a Realistic One? {\textbar} Blog Post},
  shorttitle = {What Are Malicious Usb Keys and How to Create a Realistic One?},
  urldate = {2024-03-27},
  abstract = {This blog post shows how to create a reliable and realistic-looking malicious USB key that can be used in a drop attack.},
  howpublished = {https://elie.net/blog/security/what-are-malicious-usb-keys-and-how-to-create-a-realistic-one},
  langid = {english},
  file = {C:\Users\maaik\Zotero\storage\RD97Q74V\what-are-malicious-usb-keys-and-how-to-create-a-realistic-one.html}
}

@misc{WhoWeAre,
  title = {Who {{We Are}} {\textbar} {{MITRE}}},
  urldate = {2024-04-29},
  abstract = {As a not-for-profit company pioneering in the public interest, MITRE serves as a powerful convener, connecting an innovation ecosystem of government, private sector, and academia. We apply our systems thinking approach to provide whole-of-nation solutions to the challenges that threaten our national security and way of life.},
  howpublished = {https://www.mitre.org/who-we-are},
  langid = {english},
  file = {C:\Users\maaik\Zotero\storage\6KPRM8X3\who-we-are.html}
}

@inproceedings{yangTMSUITrustManagement2016,
  title = {{{TMSUI}}: {{A Trust Management Scheme}} of {{USB Storage Devices}} for {{Industrial Control Systems}}},
  shorttitle = {{{TMSUI}}},
  booktitle = {Information and {{Communications Security}}},
  author = {Yang, Bo and Qin, Yu and Zhang, Yingjun and Wang, Weijin and Feng, Dengguo},
  editor = {Qing, Sihan and Okamoto, Eiji and Kim, Kwangjo and Liu, Dongmei},
  year = {2016},
  series = {Lecture {{Notes}} in {{Computer Science}}},
  pages = {152--168},
  publisher = {Springer International Publishing},
  address = {Cham},
  doi = {10.1007/978-3-319-29814-6_13},
  abstract = {The security of sensitive data and the safety of control signal are two core issues in industrial control system (ICS). However, the prevalence of USB storage devices brings a great challenge on protecting ICS in those respects. Unfortunately, there is currently no solution specially for ICS to provide a complete defense against communication between untrusted USB storage devices and critical equipment without forbidding normal USB device function. This paper proposes a trust management scheme of USB storage devices for ICS (TMSUI). By fully considering application scenarios, TMSUI is designed based on security chip to flexibly achieve authorizing a certain USB storage device to only access some exact protected terminals in ICS for a particular period of time. The scheme enables administrators to revoke authorized devices. We analyze six security properties of TMSUI. The prototype system is finally implemented. The evaluation results indicate that our scheme meets the security goals with high compatibility and good efficiency.},
  isbn = {978-3-319-29814-6},
  langid = {english},
  keywords = {Industrial control system,Industrial security,read1,Security chip,snippet,TPM/TCM,Trust management,USB storage device},
  file = {C:\Users\maaik\Zotero\storage\BB2S2T9Q\Yang et al. - 2016 - TMSUI A Trust Management Scheme of USB Storage De.pdf}
}

@article{zhuangKeyboardAcousticEmanations2009,
  title = {Keyboard Acoustic Emanations Revisited},
  author = {Zhuang, Li and Zhou, Feng and Tygar, J. D.},
  year = {2009},
  month = nov,
  journal = {ACM Transactions on Information and System Security},
  volume = {13},
  number = {1},
  pages = {3:1--3:26},
  issn = {1094-9224},
  doi = {10.1145/1609956.1609959},
  urldate = {2024-03-28},
  abstract = {We examine the problem of keyboard acoustic emanations. We present a novel attack taking as input a 10-minute sound recording of a user typing English text using a keyboard and recovering up to 96\% of typed characters. There is no need for training recordings labeled with the corresponding clear text. A recognizer bootstrapped from a 10-minute sound recording can even recognize random text such as passwords: In our experiments, 90\% of 5-character random passwords using only letters can be generated in fewer than 20 attempts by an adversary; 80\% of 10-character passwords can be generated in fewer than 75 attempts by an adversary. In the attack, we use the statistical constraints of the underlying content, English language, to reconstruct text from sound recordings without knowing the corresponding clear text. The attack incorporates a combination of standard machine learning and speech recognition techniques, including cepstrum features, Hidden Markov Models, linear classification, and feedback-based incremental learning.},
  keywords = {acoustic manations,cepstrum,Computer security,electronic eavesdropping,hidden markov models,HMM,human factors,keyboards,learning theory,privacy,read1,signal analysis},
  file = {C:\Users\maaik\Zotero\storage\A4DKZ463\Zhuang et al. - 2009 - Keyboard acoustic emanations revisited.pdf}
}
